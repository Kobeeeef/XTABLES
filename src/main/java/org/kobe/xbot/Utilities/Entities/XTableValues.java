// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: XTableValues.proto
// Protobuf Java Version: 4.29.2

package org.kobe.xbot.Utilities.Entities;

public final class XTableValues {
  private XTableValues() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      XTableValues.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.kobe.xbot.Utilities.Entities.RobotDirection}
   */
  public enum RobotDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FRONT = 0;</code>
     */
    FRONT(0),
    /**
     * <code>BACK = 1;</code>
     */
    BACK(1),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        RobotDirection.class.getName());
    }
    /**
     * <code>FRONT = 0;</code>
     */
    public static final int FRONT_VALUE = 0;
    /**
     * <code>BACK = 1;</code>
     */
    public static final int BACK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RobotDirection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RobotDirection forNumber(int value) {
      switch (value) {
        case 0: return FRONT;
        case 1: return BACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RobotDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RobotDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RobotDirection>() {
            public RobotDirection findValueByNumber(int number) {
              return RobotDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.getDescriptor().getEnumTypes().get(0);
    }

    private static final RobotDirection[] VALUES = values();

    public static RobotDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RobotDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.kobe.xbot.Utilities.Entities.RobotDirection)
  }

  public interface CoordinateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.Coordinate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    double getX();

    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    double getY();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.Coordinate}
   */
  public static final class Coordinate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.Coordinate)
      CoordinateOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        Coordinate.class.getName());
    }
    // Use Coordinate.newBuilder() to construct.
    private Coordinate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Coordinate() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.class, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private double x_ = 0D;
    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_ = 0D;
    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public double getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        output.writeDouble(1, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        output.writeDouble(2, y_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate other = (org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate) obj;

      if (java.lang.Double.doubleToLongBits(getX())
          != java.lang.Double.doubleToLongBits(
              other.getX())) return false;
      if (java.lang.Double.doubleToLongBits(getY())
          != java.lang.Double.doubleToLongBits(
              other.getY())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.Coordinate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.Coordinate)
        org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.class, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        x_ = 0D;
        y_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate result = new org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x_ = x_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y_ = y_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.getDefaultInstance()) return this;
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                x_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                y_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double x_ ;
      /**
       * <code>double x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public double getX() {
        return x_;
      }
      /**
       * <code>double x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {

        x_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>double y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public double getY() {
        return y_;
      }
      /**
       * <code>double y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {

        y_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.Coordinate)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.Coordinate)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Coordinate>
        PARSER = new com.google.protobuf.AbstractParser<Coordinate>() {
      @java.lang.Override
      public Coordinate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Coordinate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Coordinate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CoordinateListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.CoordinateList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> 
        getCoordinatesList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getCoordinates(int index);
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    int getCoordinatesCount();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder> 
        getCoordinatesOrBuilderList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder getCoordinatesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.CoordinateList}
   */
  public static final class CoordinateList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.CoordinateList)
      CoordinateListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        CoordinateList.class.getName());
    }
    // Use CoordinateList.newBuilder() to construct.
    private CoordinateList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CoordinateList() {
      coordinates_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.class, org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.Builder.class);
    }

    public static final int COORDINATES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> coordinates_;
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> getCoordinatesList() {
      return coordinates_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder> 
        getCoordinatesOrBuilderList() {
      return coordinates_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    @java.lang.Override
    public int getCoordinatesCount() {
      return coordinates_.size();
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getCoordinates(int index) {
      return coordinates_.get(index);
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder getCoordinatesOrBuilder(
        int index) {
      return coordinates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < coordinates_.size(); i++) {
        output.writeMessage(1, coordinates_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < coordinates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, coordinates_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList other = (org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList) obj;

      if (!getCoordinatesList()
          .equals(other.getCoordinatesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCoordinatesCount() > 0) {
        hash = (37 * hash) + COORDINATES_FIELD_NUMBER;
        hash = (53 * hash) + getCoordinatesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.CoordinateList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.CoordinateList)
        org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.class, org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (coordinatesBuilder_ == null) {
          coordinates_ = java.util.Collections.emptyList();
        } else {
          coordinates_ = null;
          coordinatesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList result = new org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList result) {
        if (coordinatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            coordinates_ = java.util.Collections.unmodifiableList(coordinates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.coordinates_ = coordinates_;
        } else {
          result.coordinates_ = coordinatesBuilder_.build();
        }
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList.getDefaultInstance()) return this;
        if (coordinatesBuilder_ == null) {
          if (!other.coordinates_.isEmpty()) {
            if (coordinates_.isEmpty()) {
              coordinates_ = other.coordinates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCoordinatesIsMutable();
              coordinates_.addAll(other.coordinates_);
            }
            onChanged();
          }
        } else {
          if (!other.coordinates_.isEmpty()) {
            if (coordinatesBuilder_.isEmpty()) {
              coordinatesBuilder_.dispose();
              coordinatesBuilder_ = null;
              coordinates_ = other.coordinates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              coordinatesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCoordinatesFieldBuilder() : null;
            } else {
              coordinatesBuilder_.addAllMessages(other.coordinates_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate m =
                    input.readMessage(
                        org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.parser(),
                        extensionRegistry);
                if (coordinatesBuilder_ == null) {
                  ensureCoordinatesIsMutable();
                  coordinates_.add(m);
                } else {
                  coordinatesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> coordinates_ =
        java.util.Collections.emptyList();
      private void ensureCoordinatesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          coordinates_ = new java.util.ArrayList<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate>(coordinates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder> coordinatesBuilder_;

      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> getCoordinatesList() {
        if (coordinatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(coordinates_);
        } else {
          return coordinatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public int getCoordinatesCount() {
        if (coordinatesBuilder_ == null) {
          return coordinates_.size();
        } else {
          return coordinatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate getCoordinates(int index) {
        if (coordinatesBuilder_ == null) {
          return coordinates_.get(index);
        } else {
          return coordinatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder setCoordinates(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate value) {
        if (coordinatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordinatesIsMutable();
          coordinates_.set(index, value);
          onChanged();
        } else {
          coordinatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder setCoordinates(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder builderForValue) {
        if (coordinatesBuilder_ == null) {
          ensureCoordinatesIsMutable();
          coordinates_.set(index, builderForValue.build());
          onChanged();
        } else {
          coordinatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder addCoordinates(org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate value) {
        if (coordinatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordinatesIsMutable();
          coordinates_.add(value);
          onChanged();
        } else {
          coordinatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder addCoordinates(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate value) {
        if (coordinatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordinatesIsMutable();
          coordinates_.add(index, value);
          onChanged();
        } else {
          coordinatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder addCoordinates(
          org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder builderForValue) {
        if (coordinatesBuilder_ == null) {
          ensureCoordinatesIsMutable();
          coordinates_.add(builderForValue.build());
          onChanged();
        } else {
          coordinatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder addCoordinates(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder builderForValue) {
        if (coordinatesBuilder_ == null) {
          ensureCoordinatesIsMutable();
          coordinates_.add(index, builderForValue.build());
          onChanged();
        } else {
          coordinatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder addAllCoordinates(
          java.lang.Iterable<? extends org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate> values) {
        if (coordinatesBuilder_ == null) {
          ensureCoordinatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, coordinates_);
          onChanged();
        } else {
          coordinatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder clearCoordinates() {
        if (coordinatesBuilder_ == null) {
          coordinates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          coordinatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public Builder removeCoordinates(int index) {
        if (coordinatesBuilder_ == null) {
          ensureCoordinatesIsMutable();
          coordinates_.remove(index);
          onChanged();
        } else {
          coordinatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder getCoordinatesBuilder(
          int index) {
        return getCoordinatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder getCoordinatesOrBuilder(
          int index) {
        if (coordinatesBuilder_ == null) {
          return coordinates_.get(index);  } else {
          return coordinatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder> 
           getCoordinatesOrBuilderList() {
        if (coordinatesBuilder_ != null) {
          return coordinatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(coordinates_);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder addCoordinatesBuilder() {
        return getCoordinatesFieldBuilder().addBuilder(
            org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder addCoordinatesBuilder(
          int index) {
        return getCoordinatesFieldBuilder().addBuilder(
            index, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.Coordinate coordinates = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder> 
           getCoordinatesBuilderList() {
        return getCoordinatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder> 
          getCoordinatesFieldBuilder() {
        if (coordinatesBuilder_ == null) {
          coordinatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate, org.kobe.xbot.Utilities.Entities.XTableValues.Coordinate.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateOrBuilder>(
                  coordinates_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          coordinates_ = null;
        }
        return coordinatesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.CoordinateList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.CoordinateList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CoordinateList>
        PARSER = new com.google.protobuf.AbstractParser<CoordinateList>() {
      @java.lang.Override
      public CoordinateList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CoordinateList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CoordinateList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.CoordinateList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControlPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.ControlPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    double getX();

    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    double getY();

    /**
     * <code>optional double rotationDegrees = 3;</code>
     * @return Whether the rotationDegrees field is set.
     */
    boolean hasRotationDegrees();
    /**
     * <code>optional double rotationDegrees = 3;</code>
     * @return The rotationDegrees.
     */
    double getRotationDegrees();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.ControlPoint}
   */
  public static final class ControlPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.ControlPoint)
      ControlPointOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        ControlPoint.class.getName());
    }
    // Use ControlPoint.newBuilder() to construct.
    private ControlPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ControlPoint() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.class, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder.class);
    }

    private int bitField0_;
    public static final int X_FIELD_NUMBER = 1;
    private double x_ = 0D;
    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_ = 0D;
    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public double getY() {
      return y_;
    }

    public static final int ROTATIONDEGREES_FIELD_NUMBER = 3;
    private double rotationDegrees_ = 0D;
    /**
     * <code>optional double rotationDegrees = 3;</code>
     * @return Whether the rotationDegrees field is set.
     */
    @java.lang.Override
    public boolean hasRotationDegrees() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double rotationDegrees = 3;</code>
     * @return The rotationDegrees.
     */
    @java.lang.Override
    public double getRotationDegrees() {
      return rotationDegrees_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        output.writeDouble(1, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        output.writeDouble(2, y_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(3, rotationDegrees_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(x_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (java.lang.Double.doubleToRawLongBits(y_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rotationDegrees_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint other = (org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint) obj;

      if (java.lang.Double.doubleToLongBits(getX())
          != java.lang.Double.doubleToLongBits(
              other.getX())) return false;
      if (java.lang.Double.doubleToLongBits(getY())
          != java.lang.Double.doubleToLongBits(
              other.getY())) return false;
      if (hasRotationDegrees() != other.hasRotationDegrees()) return false;
      if (hasRotationDegrees()) {
        if (java.lang.Double.doubleToLongBits(getRotationDegrees())
            != java.lang.Double.doubleToLongBits(
                other.getRotationDegrees())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      if (hasRotationDegrees()) {
        hash = (37 * hash) + ROTATIONDEGREES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getRotationDegrees()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.ControlPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.ControlPoint)
        org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.class, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        x_ = 0D;
        y_ = 0D;
        rotationDegrees_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint result = new org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x_ = x_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y_ = y_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.rotationDegrees_ = rotationDegrees_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance()) return this;
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        if (other.hasRotationDegrees()) {
          setRotationDegrees(other.getRotationDegrees());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                x_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                y_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                rotationDegrees_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double x_ ;
      /**
       * <code>double x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public double getX() {
        return x_;
      }
      /**
       * <code>double x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {

        x_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>double x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>double y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public double getY() {
        return y_;
      }
      /**
       * <code>double y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {

        y_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>double y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        onChanged();
        return this;
      }

      private double rotationDegrees_ ;
      /**
       * <code>optional double rotationDegrees = 3;</code>
       * @return Whether the rotationDegrees field is set.
       */
      @java.lang.Override
      public boolean hasRotationDegrees() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double rotationDegrees = 3;</code>
       * @return The rotationDegrees.
       */
      @java.lang.Override
      public double getRotationDegrees() {
        return rotationDegrees_;
      }
      /**
       * <code>optional double rotationDegrees = 3;</code>
       * @param value The rotationDegrees to set.
       * @return This builder for chaining.
       */
      public Builder setRotationDegrees(double value) {

        rotationDegrees_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rotationDegrees = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationDegrees() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rotationDegrees_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.ControlPoint)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.ControlPoint)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlPoint>
        PARSER = new com.google.protobuf.AbstractParser<ControlPoint>() {
      @java.lang.Override
      public ControlPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ControlPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ControlPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BezierCurveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.BezierCurve)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> 
        getControlPointsList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getControlPoints(int index);
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    int getControlPointsCount();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
        getControlPointsOrBuilderList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getControlPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurve}
   */
  public static final class BezierCurve extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.BezierCurve)
      BezierCurveOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        BezierCurve.class.getName());
    }
    // Use BezierCurve.newBuilder() to construct.
    private BezierCurve(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BezierCurve() {
      controlPoints_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder.class);
    }

    public static final int CONTROLPOINTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> controlPoints_;
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> getControlPointsList() {
      return controlPoints_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
        getControlPointsOrBuilderList() {
      return controlPoints_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    @java.lang.Override
    public int getControlPointsCount() {
      return controlPoints_.size();
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getControlPoints(int index) {
      return controlPoints_.get(index);
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getControlPointsOrBuilder(
        int index) {
      return controlPoints_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < controlPoints_.size(); i++) {
        output.writeMessage(1, controlPoints_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < controlPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, controlPoints_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve other = (org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve) obj;

      if (!getControlPointsList()
          .equals(other.getControlPointsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getControlPointsCount() > 0) {
        hash = (37 * hash) + CONTROLPOINTS_FIELD_NUMBER;
        hash = (53 * hash) + getControlPointsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurve}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.BezierCurve)
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (controlPointsBuilder_ == null) {
          controlPoints_ = java.util.Collections.emptyList();
        } else {
          controlPoints_ = null;
          controlPointsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve result = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve result) {
        if (controlPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            controlPoints_ = java.util.Collections.unmodifiableList(controlPoints_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.controlPoints_ = controlPoints_;
        } else {
          result.controlPoints_ = controlPointsBuilder_.build();
        }
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.getDefaultInstance()) return this;
        if (controlPointsBuilder_ == null) {
          if (!other.controlPoints_.isEmpty()) {
            if (controlPoints_.isEmpty()) {
              controlPoints_ = other.controlPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureControlPointsIsMutable();
              controlPoints_.addAll(other.controlPoints_);
            }
            onChanged();
          }
        } else {
          if (!other.controlPoints_.isEmpty()) {
            if (controlPointsBuilder_.isEmpty()) {
              controlPointsBuilder_.dispose();
              controlPointsBuilder_ = null;
              controlPoints_ = other.controlPoints_;
              bitField0_ = (bitField0_ & ~0x00000001);
              controlPointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getControlPointsFieldBuilder() : null;
            } else {
              controlPointsBuilder_.addAllMessages(other.controlPoints_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint m =
                    input.readMessage(
                        org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.parser(),
                        extensionRegistry);
                if (controlPointsBuilder_ == null) {
                  ensureControlPointsIsMutable();
                  controlPoints_.add(m);
                } else {
                  controlPointsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> controlPoints_ =
        java.util.Collections.emptyList();
      private void ensureControlPointsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          controlPoints_ = new java.util.ArrayList<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint>(controlPoints_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> controlPointsBuilder_;

      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> getControlPointsList() {
        if (controlPointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(controlPoints_);
        } else {
          return controlPointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public int getControlPointsCount() {
        if (controlPointsBuilder_ == null) {
          return controlPoints_.size();
        } else {
          return controlPointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getControlPoints(int index) {
        if (controlPointsBuilder_ == null) {
          return controlPoints_.get(index);
        } else {
          return controlPointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder setControlPoints(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (controlPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlPointsIsMutable();
          controlPoints_.set(index, value);
          onChanged();
        } else {
          controlPointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder setControlPoints(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder builderForValue) {
        if (controlPointsBuilder_ == null) {
          ensureControlPointsIsMutable();
          controlPoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          controlPointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder addControlPoints(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (controlPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlPointsIsMutable();
          controlPoints_.add(value);
          onChanged();
        } else {
          controlPointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder addControlPoints(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (controlPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureControlPointsIsMutable();
          controlPoints_.add(index, value);
          onChanged();
        } else {
          controlPointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder addControlPoints(
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder builderForValue) {
        if (controlPointsBuilder_ == null) {
          ensureControlPointsIsMutable();
          controlPoints_.add(builderForValue.build());
          onChanged();
        } else {
          controlPointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder addControlPoints(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder builderForValue) {
        if (controlPointsBuilder_ == null) {
          ensureControlPointsIsMutable();
          controlPoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          controlPointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder addAllControlPoints(
          java.lang.Iterable<? extends org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint> values) {
        if (controlPointsBuilder_ == null) {
          ensureControlPointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, controlPoints_);
          onChanged();
        } else {
          controlPointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder clearControlPoints() {
        if (controlPointsBuilder_ == null) {
          controlPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          controlPointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public Builder removeControlPoints(int index) {
        if (controlPointsBuilder_ == null) {
          ensureControlPointsIsMutable();
          controlPoints_.remove(index);
          onChanged();
        } else {
          controlPointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder getControlPointsBuilder(
          int index) {
        return getControlPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getControlPointsOrBuilder(
          int index) {
        if (controlPointsBuilder_ == null) {
          return controlPoints_.get(index);  } else {
          return controlPointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
           getControlPointsOrBuilderList() {
        if (controlPointsBuilder_ != null) {
          return controlPointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(controlPoints_);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder addControlPointsBuilder() {
        return getControlPointsFieldBuilder().addBuilder(
            org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder addControlPointsBuilder(
          int index) {
        return getControlPointsFieldBuilder().addBuilder(
            index, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.ControlPoint controlPoints = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder> 
           getControlPointsBuilderList() {
        return getControlPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
          getControlPointsFieldBuilder() {
        if (controlPointsBuilder_ == null) {
          controlPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder>(
                  controlPoints_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          controlPoints_ = null;
        }
        return controlPointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.BezierCurve)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.BezierCurve)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BezierCurve>
        PARSER = new com.google.protobuf.AbstractParser<BezierCurve>() {
      @java.lang.Override
      public BezierCurve parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BezierCurve> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BezierCurve> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestVisionCoprocessorMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     * @return Whether the start field is set.
     */
    boolean hasStart();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     * @return The start.
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getStart();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getStartOrBuilder();

    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     * @return Whether the end field is set.
     */
    boolean hasEnd();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     * @return The end.
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getEnd();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getEndOrBuilder();

    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     * @return Whether the options field is set.
     */
    boolean hasOptions();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     * @return The options.
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder();

    /**
     * <code>optional double safeDistanceInches = 4;</code>
     * @return Whether the safeDistanceInches field is set.
     */
    boolean hasSafeDistanceInches();
    /**
     * <code>optional double safeDistanceInches = 4;</code>
     * @return The safeDistanceInches.
     */
    double getSafeDistanceInches();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage}
   */
  public static final class RequestVisionCoprocessorMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage)
      RequestVisionCoprocessorMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        RequestVisionCoprocessorMessage.class.getName());
    }
    // Use RequestVisionCoprocessorMessage.newBuilder() to construct.
    private RequestVisionCoprocessorMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestVisionCoprocessorMessage() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.class, org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.Builder.class);
    }

    private int bitField0_;
    public static final int START_FIELD_NUMBER = 1;
    private org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint start_;
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     * @return Whether the start field is set.
     */
    @java.lang.Override
    public boolean hasStart() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     * @return The start.
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getStart() {
      return start_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : start_;
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getStartOrBuilder() {
      return start_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : start_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint end_;
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     * @return Whether the end field is set.
     */
    @java.lang.Override
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     * @return The end.
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getEnd() {
      return end_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : end_;
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getEndOrBuilder() {
      return end_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : end_;
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions options_;
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     * @return Whether the options field is set.
     */
    @java.lang.Override
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     * @return The options.
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions() {
      return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder() {
      return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
    }

    public static final int SAFEDISTANCEINCHES_FIELD_NUMBER = 4;
    private double safeDistanceInches_ = 0D;
    /**
     * <code>optional double safeDistanceInches = 4;</code>
     * @return Whether the safeDistanceInches field is set.
     */
    @java.lang.Override
    public boolean hasSafeDistanceInches() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double safeDistanceInches = 4;</code>
     * @return The safeDistanceInches.
     */
    @java.lang.Override
    public double getSafeDistanceInches() {
      return safeDistanceInches_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getStart());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getEnd());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getOptions());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, safeDistanceInches_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStart());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEnd());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOptions());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, safeDistanceInches_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage other = (org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage) obj;

      if (hasStart() != other.hasStart()) return false;
      if (hasStart()) {
        if (!getStart()
            .equals(other.getStart())) return false;
      }
      if (hasEnd() != other.hasEnd()) return false;
      if (hasEnd()) {
        if (!getEnd()
            .equals(other.getEnd())) return false;
      }
      if (hasOptions() != other.hasOptions()) return false;
      if (hasOptions()) {
        if (!getOptions()
            .equals(other.getOptions())) return false;
      }
      if (hasSafeDistanceInches() != other.hasSafeDistanceInches()) return false;
      if (hasSafeDistanceInches()) {
        if (java.lang.Double.doubleToLongBits(getSafeDistanceInches())
            != java.lang.Double.doubleToLongBits(
                other.getSafeDistanceInches())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStart()) {
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + getStart().hashCode();
      }
      if (hasEnd()) {
        hash = (37 * hash) + END_FIELD_NUMBER;
        hash = (53 * hash) + getEnd().hashCode();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      if (hasSafeDistanceInches()) {
        hash = (37 * hash) + SAFEDISTANCEINCHES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getSafeDistanceInches()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage)
        org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.class, org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getStartFieldBuilder();
          getEndFieldBuilder();
          getOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        start_ = null;
        if (startBuilder_ != null) {
          startBuilder_.dispose();
          startBuilder_ = null;
        }
        end_ = null;
        if (endBuilder_ != null) {
          endBuilder_.dispose();
          endBuilder_ = null;
        }
        options_ = null;
        if (optionsBuilder_ != null) {
          optionsBuilder_.dispose();
          optionsBuilder_ = null;
        }
        safeDistanceInches_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage result = new org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.start_ = startBuilder_ == null
              ? start_
              : startBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.end_ = endBuilder_ == null
              ? end_
              : endBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.options_ = optionsBuilder_ == null
              ? options_
              : optionsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.safeDistanceInches_ = safeDistanceInches_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage.getDefaultInstance()) return this;
        if (other.hasStart()) {
          mergeStart(other.getStart());
        }
        if (other.hasEnd()) {
          mergeEnd(other.getEnd());
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        if (other.hasSafeDistanceInches()) {
          setSafeDistanceInches(other.getSafeDistanceInches());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getEndFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 33: {
                safeDistanceInches_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint start_;
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> startBuilder_;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       * @return Whether the start field is set.
       */
      public boolean hasStart() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       * @return The start.
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getStart() {
        if (startBuilder_ == null) {
          return start_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : start_;
        } else {
          return startBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public Builder setStart(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (startBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          start_ = value;
        } else {
          startBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public Builder setStart(
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder builderForValue) {
        if (startBuilder_ == null) {
          start_ = builderForValue.build();
        } else {
          startBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public Builder mergeStart(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (startBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            start_ != null &&
            start_ != org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance()) {
            getStartBuilder().mergeFrom(value);
          } else {
            start_ = value;
          }
        } else {
          startBuilder_.mergeFrom(value);
        }
        if (start_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public Builder clearStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        start_ = null;
        if (startBuilder_ != null) {
          startBuilder_.dispose();
          startBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder getStartBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getStartOrBuilder() {
        if (startBuilder_ != null) {
          return startBuilder_.getMessageOrBuilder();
        } else {
          return start_ == null ?
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : start_;
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint start = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
          getStartFieldBuilder() {
        if (startBuilder_ == null) {
          startBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder>(
                  getStart(),
                  getParentForChildren(),
                  isClean());
          start_ = null;
        }
        return startBuilder_;
      }

      private org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint end_;
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> endBuilder_;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       * @return Whether the end field is set.
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       * @return The end.
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint getEnd() {
        if (endBuilder_ == null) {
          return end_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : end_;
        } else {
          return endBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public Builder setEnd(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (endBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          end_ = value;
        } else {
          endBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public Builder setEnd(
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder builderForValue) {
        if (endBuilder_ == null) {
          end_ = builderForValue.build();
        } else {
          endBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public Builder mergeEnd(org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint value) {
        if (endBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            end_ != null &&
            end_ != org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance()) {
            getEndBuilder().mergeFrom(value);
          } else {
            end_ = value;
          }
        } else {
          endBuilder_.mergeFrom(value);
        }
        if (end_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = null;
        if (endBuilder_ != null) {
          endBuilder_.dispose();
          endBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder getEndBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEndFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder getEndOrBuilder() {
        if (endBuilder_ != null) {
          return endBuilder_.getMessageOrBuilder();
        } else {
          return end_ == null ?
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.getDefaultInstance() : end_;
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.ControlPoint end = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder> 
          getEndFieldBuilder() {
        if (endBuilder_ == null) {
          endBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPoint.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.ControlPointOrBuilder>(
                  getEnd(),
                  getParentForChildren(),
                  isClean());
          end_ = null;
        }
        return endBuilder_;
      }

      private org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions options_;
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder> optionsBuilder_;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       * @return Whether the options field is set.
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       * @return The options.
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public Builder setOptions(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
        } else {
          optionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public Builder setOptions(
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public Builder mergeOptions(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions value) {
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            options_ != null &&
            options_ != org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance()) {
            getOptionsBuilder().mergeFrom(value);
          } else {
            options_ = value;
          }
        } else {
          optionsBuilder_.mergeFrom(value);
        }
        if (options_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public Builder clearOptions() {
        bitField0_ = (bitField0_ & ~0x00000004);
        options_ = null;
        if (optionsBuilder_ != null) {
          optionsBuilder_.dispose();
          optionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder getOptionsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.TraversalOptions options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }

      private double safeDistanceInches_ ;
      /**
       * <code>optional double safeDistanceInches = 4;</code>
       * @return Whether the safeDistanceInches field is set.
       */
      @java.lang.Override
      public boolean hasSafeDistanceInches() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double safeDistanceInches = 4;</code>
       * @return The safeDistanceInches.
       */
      @java.lang.Override
      public double getSafeDistanceInches() {
        return safeDistanceInches_;
      }
      /**
       * <code>optional double safeDistanceInches = 4;</code>
       * @param value The safeDistanceInches to set.
       * @return This builder for chaining.
       */
      public Builder setSafeDistanceInches(double value) {

        safeDistanceInches_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double safeDistanceInches = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSafeDistanceInches() {
        bitField0_ = (bitField0_ & ~0x00000008);
        safeDistanceInches_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.RequestVisionCoprocessorMessage)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestVisionCoprocessorMessage>
        PARSER = new com.google.protobuf.AbstractParser<RequestVisionCoprocessorMessage>() {
      @java.lang.Override
      public RequestVisionCoprocessorMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RequestVisionCoprocessorMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestVisionCoprocessorMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.RequestVisionCoprocessorMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TraversalOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.TraversalOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double metersPerSecond = 1;</code>
     * @return Whether the metersPerSecond field is set.
     */
    boolean hasMetersPerSecond();
    /**
     * <code>optional double metersPerSecond = 1;</code>
     * @return The metersPerSecond.
     */
    double getMetersPerSecond();

    /**
     * <code>optional double finalRotationDegrees = 2;</code>
     * @return Whether the finalRotationDegrees field is set.
     */
    boolean hasFinalRotationDegrees();
    /**
     * <code>optional double finalRotationDegrees = 2;</code>
     * @return The finalRotationDegrees.
     */
    double getFinalRotationDegrees();

    /**
     * <code>optional double accelerationMetersPerSecond = 3;</code>
     * @return Whether the accelerationMetersPerSecond field is set.
     */
    boolean hasAccelerationMetersPerSecond();
    /**
     * <code>optional double accelerationMetersPerSecond = 3;</code>
     * @return The accelerationMetersPerSecond.
     */
    double getAccelerationMetersPerSecond();

    /**
     * <code>optional bool faceNearestReefAprilTag = 4;</code>
     * @return Whether the faceNearestReefAprilTag field is set.
     */
    boolean hasFaceNearestReefAprilTag();
    /**
     * <code>optional bool faceNearestReefAprilTag = 4;</code>
     * @return The faceNearestReefAprilTag.
     */
    boolean getFaceNearestReefAprilTag();

    /**
     * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
     * @return Whether the endFaceNearestReefAprilTagPathThresholdPercentage field is set.
     */
    boolean hasEndFaceNearestReefAprilTagPathThresholdPercentage();
    /**
     * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
     * @return The endFaceNearestReefAprilTagPathThresholdPercentage.
     */
    double getEndFaceNearestReefAprilTagPathThresholdPercentage();

    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return Whether the faceNearestReefAprilTagDirection field is set.
     */
    boolean hasFaceNearestReefAprilTagDirection();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return The enum numeric value on the wire for faceNearestReefAprilTagDirection.
     */
    int getFaceNearestReefAprilTagDirectionValue();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return The faceNearestReefAprilTagDirection.
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection getFaceNearestReefAprilTagDirection();

    /**
     * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
     * @return Whether the finalRotationTurnSpeedFactor field is set.
     */
    boolean hasFinalRotationTurnSpeedFactor();
    /**
     * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
     * @return The finalRotationTurnSpeedFactor.
     */
    double getFinalRotationTurnSpeedFactor();

    /**
     * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
     * @return Whether the startFaceNearestReefAprilTagPathThresholdPercentage field is set.
     */
    boolean hasStartFaceNearestReefAprilTagPathThresholdPercentage();
    /**
     * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
     * @return The startFaceNearestReefAprilTagPathThresholdPercentage.
     */
    double getStartFaceNearestReefAprilTagPathThresholdPercentage();

    /**
     * <code>optional bool snapToNearestAprilTag = 9;</code>
     * @return Whether the snapToNearestAprilTag field is set.
     */
    boolean hasSnapToNearestAprilTag();
    /**
     * <code>optional bool snapToNearestAprilTag = 9;</code>
     * @return The snapToNearestAprilTag.
     */
    boolean getSnapToNearestAprilTag();

    /**
     * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
     * @return Whether the aprilTagRotationDegreesTurnSpeedFactorPerStep field is set.
     */
    boolean hasAprilTagRotationDegreesTurnSpeedFactorPerStep();
    /**
     * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
     * @return The aprilTagRotationDegreesTurnSpeedFactorPerStep.
     */
    double getAprilTagRotationDegreesTurnSpeedFactorPerStep();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.TraversalOptions}
   */
  public static final class TraversalOptions extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.TraversalOptions)
      TraversalOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        TraversalOptions.class.getName());
    }
    // Use TraversalOptions.newBuilder() to construct.
    private TraversalOptions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private TraversalOptions() {
      faceNearestReefAprilTagDirection_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.class, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder.class);
    }

    private int bitField0_;
    public static final int METERSPERSECOND_FIELD_NUMBER = 1;
    private double metersPerSecond_ = 0D;
    /**
     * <code>optional double metersPerSecond = 1;</code>
     * @return Whether the metersPerSecond field is set.
     */
    @java.lang.Override
    public boolean hasMetersPerSecond() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double metersPerSecond = 1;</code>
     * @return The metersPerSecond.
     */
    @java.lang.Override
    public double getMetersPerSecond() {
      return metersPerSecond_;
    }

    public static final int FINALROTATIONDEGREES_FIELD_NUMBER = 2;
    private double finalRotationDegrees_ = 0D;
    /**
     * <code>optional double finalRotationDegrees = 2;</code>
     * @return Whether the finalRotationDegrees field is set.
     */
    @java.lang.Override
    public boolean hasFinalRotationDegrees() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double finalRotationDegrees = 2;</code>
     * @return The finalRotationDegrees.
     */
    @java.lang.Override
    public double getFinalRotationDegrees() {
      return finalRotationDegrees_;
    }

    public static final int ACCELERATIONMETERSPERSECOND_FIELD_NUMBER = 3;
    private double accelerationMetersPerSecond_ = 0D;
    /**
     * <code>optional double accelerationMetersPerSecond = 3;</code>
     * @return Whether the accelerationMetersPerSecond field is set.
     */
    @java.lang.Override
    public boolean hasAccelerationMetersPerSecond() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double accelerationMetersPerSecond = 3;</code>
     * @return The accelerationMetersPerSecond.
     */
    @java.lang.Override
    public double getAccelerationMetersPerSecond() {
      return accelerationMetersPerSecond_;
    }

    public static final int FACENEARESTREEFAPRILTAG_FIELD_NUMBER = 4;
    private boolean faceNearestReefAprilTag_ = false;
    /**
     * <code>optional bool faceNearestReefAprilTag = 4;</code>
     * @return Whether the faceNearestReefAprilTag field is set.
     */
    @java.lang.Override
    public boolean hasFaceNearestReefAprilTag() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool faceNearestReefAprilTag = 4;</code>
     * @return The faceNearestReefAprilTag.
     */
    @java.lang.Override
    public boolean getFaceNearestReefAprilTag() {
      return faceNearestReefAprilTag_;
    }

    public static final int ENDFACENEARESTREEFAPRILTAGPATHTHRESHOLDPERCENTAGE_FIELD_NUMBER = 5;
    private double endFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
    /**
     * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
     * @return Whether the endFaceNearestReefAprilTagPathThresholdPercentage field is set.
     */
    @java.lang.Override
    public boolean hasEndFaceNearestReefAprilTagPathThresholdPercentage() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
     * @return The endFaceNearestReefAprilTagPathThresholdPercentage.
     */
    @java.lang.Override
    public double getEndFaceNearestReefAprilTagPathThresholdPercentage() {
      return endFaceNearestReefAprilTagPathThresholdPercentage_;
    }

    public static final int FACENEARESTREEFAPRILTAGDIRECTION_FIELD_NUMBER = 6;
    private int faceNearestReefAprilTagDirection_ = 0;
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return Whether the faceNearestReefAprilTagDirection field is set.
     */
    @java.lang.Override public boolean hasFaceNearestReefAprilTagDirection() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return The enum numeric value on the wire for faceNearestReefAprilTagDirection.
     */
    @java.lang.Override public int getFaceNearestReefAprilTagDirectionValue() {
      return faceNearestReefAprilTagDirection_;
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
     * @return The faceNearestReefAprilTagDirection.
     */
    @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection getFaceNearestReefAprilTagDirection() {
      org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection result = org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection.forNumber(faceNearestReefAprilTagDirection_);
      return result == null ? org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection.UNRECOGNIZED : result;
    }

    public static final int FINALROTATIONTURNSPEEDFACTOR_FIELD_NUMBER = 7;
    private double finalRotationTurnSpeedFactor_ = 0D;
    /**
     * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
     * @return Whether the finalRotationTurnSpeedFactor field is set.
     */
    @java.lang.Override
    public boolean hasFinalRotationTurnSpeedFactor() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
     * @return The finalRotationTurnSpeedFactor.
     */
    @java.lang.Override
    public double getFinalRotationTurnSpeedFactor() {
      return finalRotationTurnSpeedFactor_;
    }

    public static final int STARTFACENEARESTREEFAPRILTAGPATHTHRESHOLDPERCENTAGE_FIELD_NUMBER = 8;
    private double startFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
    /**
     * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
     * @return Whether the startFaceNearestReefAprilTagPathThresholdPercentage field is set.
     */
    @java.lang.Override
    public boolean hasStartFaceNearestReefAprilTagPathThresholdPercentage() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
     * @return The startFaceNearestReefAprilTagPathThresholdPercentage.
     */
    @java.lang.Override
    public double getStartFaceNearestReefAprilTagPathThresholdPercentage() {
      return startFaceNearestReefAprilTagPathThresholdPercentage_;
    }

    public static final int SNAPTONEARESTAPRILTAG_FIELD_NUMBER = 9;
    private boolean snapToNearestAprilTag_ = false;
    /**
     * <code>optional bool snapToNearestAprilTag = 9;</code>
     * @return Whether the snapToNearestAprilTag field is set.
     */
    @java.lang.Override
    public boolean hasSnapToNearestAprilTag() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool snapToNearestAprilTag = 9;</code>
     * @return The snapToNearestAprilTag.
     */
    @java.lang.Override
    public boolean getSnapToNearestAprilTag() {
      return snapToNearestAprilTag_;
    }

    public static final int APRILTAGROTATIONDEGREESTURNSPEEDFACTORPERSTEP_FIELD_NUMBER = 10;
    private double aprilTagRotationDegreesTurnSpeedFactorPerStep_ = 0D;
    /**
     * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
     * @return Whether the aprilTagRotationDegreesTurnSpeedFactorPerStep field is set.
     */
    @java.lang.Override
    public boolean hasAprilTagRotationDegreesTurnSpeedFactorPerStep() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
     * @return The aprilTagRotationDegreesTurnSpeedFactorPerStep.
     */
    @java.lang.Override
    public double getAprilTagRotationDegreesTurnSpeedFactorPerStep() {
      return aprilTagRotationDegreesTurnSpeedFactorPerStep_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, metersPerSecond_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, finalRotationDegrees_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, accelerationMetersPerSecond_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, faceNearestReefAprilTag_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeDouble(5, endFaceNearestReefAprilTagPathThresholdPercentage_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeEnum(6, faceNearestReefAprilTagDirection_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, finalRotationTurnSpeedFactor_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, startFaceNearestReefAprilTagPathThresholdPercentage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, snapToNearestAprilTag_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeDouble(10, aprilTagRotationDegreesTurnSpeedFactorPerStep_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, metersPerSecond_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, finalRotationDegrees_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, accelerationMetersPerSecond_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, faceNearestReefAprilTag_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, endFaceNearestReefAprilTagPathThresholdPercentage_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, faceNearestReefAprilTagDirection_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, finalRotationTurnSpeedFactor_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, startFaceNearestReefAprilTagPathThresholdPercentage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, snapToNearestAprilTag_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, aprilTagRotationDegreesTurnSpeedFactorPerStep_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions other = (org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions) obj;

      if (hasMetersPerSecond() != other.hasMetersPerSecond()) return false;
      if (hasMetersPerSecond()) {
        if (java.lang.Double.doubleToLongBits(getMetersPerSecond())
            != java.lang.Double.doubleToLongBits(
                other.getMetersPerSecond())) return false;
      }
      if (hasFinalRotationDegrees() != other.hasFinalRotationDegrees()) return false;
      if (hasFinalRotationDegrees()) {
        if (java.lang.Double.doubleToLongBits(getFinalRotationDegrees())
            != java.lang.Double.doubleToLongBits(
                other.getFinalRotationDegrees())) return false;
      }
      if (hasAccelerationMetersPerSecond() != other.hasAccelerationMetersPerSecond()) return false;
      if (hasAccelerationMetersPerSecond()) {
        if (java.lang.Double.doubleToLongBits(getAccelerationMetersPerSecond())
            != java.lang.Double.doubleToLongBits(
                other.getAccelerationMetersPerSecond())) return false;
      }
      if (hasFaceNearestReefAprilTag() != other.hasFaceNearestReefAprilTag()) return false;
      if (hasFaceNearestReefAprilTag()) {
        if (getFaceNearestReefAprilTag()
            != other.getFaceNearestReefAprilTag()) return false;
      }
      if (hasEndFaceNearestReefAprilTagPathThresholdPercentage() != other.hasEndFaceNearestReefAprilTagPathThresholdPercentage()) return false;
      if (hasEndFaceNearestReefAprilTagPathThresholdPercentage()) {
        if (java.lang.Double.doubleToLongBits(getEndFaceNearestReefAprilTagPathThresholdPercentage())
            != java.lang.Double.doubleToLongBits(
                other.getEndFaceNearestReefAprilTagPathThresholdPercentage())) return false;
      }
      if (hasFaceNearestReefAprilTagDirection() != other.hasFaceNearestReefAprilTagDirection()) return false;
      if (hasFaceNearestReefAprilTagDirection()) {
        if (faceNearestReefAprilTagDirection_ != other.faceNearestReefAprilTagDirection_) return false;
      }
      if (hasFinalRotationTurnSpeedFactor() != other.hasFinalRotationTurnSpeedFactor()) return false;
      if (hasFinalRotationTurnSpeedFactor()) {
        if (java.lang.Double.doubleToLongBits(getFinalRotationTurnSpeedFactor())
            != java.lang.Double.doubleToLongBits(
                other.getFinalRotationTurnSpeedFactor())) return false;
      }
      if (hasStartFaceNearestReefAprilTagPathThresholdPercentage() != other.hasStartFaceNearestReefAprilTagPathThresholdPercentage()) return false;
      if (hasStartFaceNearestReefAprilTagPathThresholdPercentage()) {
        if (java.lang.Double.doubleToLongBits(getStartFaceNearestReefAprilTagPathThresholdPercentage())
            != java.lang.Double.doubleToLongBits(
                other.getStartFaceNearestReefAprilTagPathThresholdPercentage())) return false;
      }
      if (hasSnapToNearestAprilTag() != other.hasSnapToNearestAprilTag()) return false;
      if (hasSnapToNearestAprilTag()) {
        if (getSnapToNearestAprilTag()
            != other.getSnapToNearestAprilTag()) return false;
      }
      if (hasAprilTagRotationDegreesTurnSpeedFactorPerStep() != other.hasAprilTagRotationDegreesTurnSpeedFactorPerStep()) return false;
      if (hasAprilTagRotationDegreesTurnSpeedFactorPerStep()) {
        if (java.lang.Double.doubleToLongBits(getAprilTagRotationDegreesTurnSpeedFactorPerStep())
            != java.lang.Double.doubleToLongBits(
                other.getAprilTagRotationDegreesTurnSpeedFactorPerStep())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetersPerSecond()) {
        hash = (37 * hash) + METERSPERSECOND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMetersPerSecond()));
      }
      if (hasFinalRotationDegrees()) {
        hash = (37 * hash) + FINALROTATIONDEGREES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFinalRotationDegrees()));
      }
      if (hasAccelerationMetersPerSecond()) {
        hash = (37 * hash) + ACCELERATIONMETERSPERSECOND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAccelerationMetersPerSecond()));
      }
      if (hasFaceNearestReefAprilTag()) {
        hash = (37 * hash) + FACENEARESTREEFAPRILTAG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFaceNearestReefAprilTag());
      }
      if (hasEndFaceNearestReefAprilTagPathThresholdPercentage()) {
        hash = (37 * hash) + ENDFACENEARESTREEFAPRILTAGPATHTHRESHOLDPERCENTAGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getEndFaceNearestReefAprilTagPathThresholdPercentage()));
      }
      if (hasFaceNearestReefAprilTagDirection()) {
        hash = (37 * hash) + FACENEARESTREEFAPRILTAGDIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + faceNearestReefAprilTagDirection_;
      }
      if (hasFinalRotationTurnSpeedFactor()) {
        hash = (37 * hash) + FINALROTATIONTURNSPEEDFACTOR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getFinalRotationTurnSpeedFactor()));
      }
      if (hasStartFaceNearestReefAprilTagPathThresholdPercentage()) {
        hash = (37 * hash) + STARTFACENEARESTREEFAPRILTAGPATHTHRESHOLDPERCENTAGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getStartFaceNearestReefAprilTagPathThresholdPercentage()));
      }
      if (hasSnapToNearestAprilTag()) {
        hash = (37 * hash) + SNAPTONEARESTAPRILTAG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSnapToNearestAprilTag());
      }
      if (hasAprilTagRotationDegreesTurnSpeedFactorPerStep()) {
        hash = (37 * hash) + APRILTAGROTATIONDEGREESTURNSPEEDFACTORPERSTEP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAprilTagRotationDegreesTurnSpeedFactorPerStep()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.TraversalOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.TraversalOptions)
        org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.class, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metersPerSecond_ = 0D;
        finalRotationDegrees_ = 0D;
        accelerationMetersPerSecond_ = 0D;
        faceNearestReefAprilTag_ = false;
        endFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
        faceNearestReefAprilTagDirection_ = 0;
        finalRotationTurnSpeedFactor_ = 0D;
        startFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
        snapToNearestAprilTag_ = false;
        aprilTagRotationDegreesTurnSpeedFactorPerStep_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions result = new org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metersPerSecond_ = metersPerSecond_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.finalRotationDegrees_ = finalRotationDegrees_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.accelerationMetersPerSecond_ = accelerationMetersPerSecond_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.faceNearestReefAprilTag_ = faceNearestReefAprilTag_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.endFaceNearestReefAprilTagPathThresholdPercentage_ = endFaceNearestReefAprilTagPathThresholdPercentage_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.faceNearestReefAprilTagDirection_ = faceNearestReefAprilTagDirection_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.finalRotationTurnSpeedFactor_ = finalRotationTurnSpeedFactor_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.startFaceNearestReefAprilTagPathThresholdPercentage_ = startFaceNearestReefAprilTagPathThresholdPercentage_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.snapToNearestAprilTag_ = snapToNearestAprilTag_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.aprilTagRotationDegreesTurnSpeedFactorPerStep_ = aprilTagRotationDegreesTurnSpeedFactorPerStep_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance()) return this;
        if (other.hasMetersPerSecond()) {
          setMetersPerSecond(other.getMetersPerSecond());
        }
        if (other.hasFinalRotationDegrees()) {
          setFinalRotationDegrees(other.getFinalRotationDegrees());
        }
        if (other.hasAccelerationMetersPerSecond()) {
          setAccelerationMetersPerSecond(other.getAccelerationMetersPerSecond());
        }
        if (other.hasFaceNearestReefAprilTag()) {
          setFaceNearestReefAprilTag(other.getFaceNearestReefAprilTag());
        }
        if (other.hasEndFaceNearestReefAprilTagPathThresholdPercentage()) {
          setEndFaceNearestReefAprilTagPathThresholdPercentage(other.getEndFaceNearestReefAprilTagPathThresholdPercentage());
        }
        if (other.hasFaceNearestReefAprilTagDirection()) {
          setFaceNearestReefAprilTagDirection(other.getFaceNearestReefAprilTagDirection());
        }
        if (other.hasFinalRotationTurnSpeedFactor()) {
          setFinalRotationTurnSpeedFactor(other.getFinalRotationTurnSpeedFactor());
        }
        if (other.hasStartFaceNearestReefAprilTagPathThresholdPercentage()) {
          setStartFaceNearestReefAprilTagPathThresholdPercentage(other.getStartFaceNearestReefAprilTagPathThresholdPercentage());
        }
        if (other.hasSnapToNearestAprilTag()) {
          setSnapToNearestAprilTag(other.getSnapToNearestAprilTag());
        }
        if (other.hasAprilTagRotationDegreesTurnSpeedFactorPerStep()) {
          setAprilTagRotationDegreesTurnSpeedFactorPerStep(other.getAprilTagRotationDegreesTurnSpeedFactorPerStep());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                metersPerSecond_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                finalRotationDegrees_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                accelerationMetersPerSecond_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                faceNearestReefAprilTag_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 41: {
                endFaceNearestReefAprilTagPathThresholdPercentage_ = input.readDouble();
                bitField0_ |= 0x00000010;
                break;
              } // case 41
              case 48: {
                faceNearestReefAprilTagDirection_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 57: {
                finalRotationTurnSpeedFactor_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 65: {
                startFaceNearestReefAprilTagPathThresholdPercentage_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 72: {
                snapToNearestAprilTag_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 81: {
                aprilTagRotationDegreesTurnSpeedFactorPerStep_ = input.readDouble();
                bitField0_ |= 0x00000200;
                break;
              } // case 81
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double metersPerSecond_ ;
      /**
       * <code>optional double metersPerSecond = 1;</code>
       * @return Whether the metersPerSecond field is set.
       */
      @java.lang.Override
      public boolean hasMetersPerSecond() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double metersPerSecond = 1;</code>
       * @return The metersPerSecond.
       */
      @java.lang.Override
      public double getMetersPerSecond() {
        return metersPerSecond_;
      }
      /**
       * <code>optional double metersPerSecond = 1;</code>
       * @param value The metersPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setMetersPerSecond(double value) {

        metersPerSecond_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional double metersPerSecond = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetersPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metersPerSecond_ = 0D;
        onChanged();
        return this;
      }

      private double finalRotationDegrees_ ;
      /**
       * <code>optional double finalRotationDegrees = 2;</code>
       * @return Whether the finalRotationDegrees field is set.
       */
      @java.lang.Override
      public boolean hasFinalRotationDegrees() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double finalRotationDegrees = 2;</code>
       * @return The finalRotationDegrees.
       */
      @java.lang.Override
      public double getFinalRotationDegrees() {
        return finalRotationDegrees_;
      }
      /**
       * <code>optional double finalRotationDegrees = 2;</code>
       * @param value The finalRotationDegrees to set.
       * @return This builder for chaining.
       */
      public Builder setFinalRotationDegrees(double value) {

        finalRotationDegrees_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double finalRotationDegrees = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinalRotationDegrees() {
        bitField0_ = (bitField0_ & ~0x00000002);
        finalRotationDegrees_ = 0D;
        onChanged();
        return this;
      }

      private double accelerationMetersPerSecond_ ;
      /**
       * <code>optional double accelerationMetersPerSecond = 3;</code>
       * @return Whether the accelerationMetersPerSecond field is set.
       */
      @java.lang.Override
      public boolean hasAccelerationMetersPerSecond() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double accelerationMetersPerSecond = 3;</code>
       * @return The accelerationMetersPerSecond.
       */
      @java.lang.Override
      public double getAccelerationMetersPerSecond() {
        return accelerationMetersPerSecond_;
      }
      /**
       * <code>optional double accelerationMetersPerSecond = 3;</code>
       * @param value The accelerationMetersPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setAccelerationMetersPerSecond(double value) {

        accelerationMetersPerSecond_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double accelerationMetersPerSecond = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccelerationMetersPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000004);
        accelerationMetersPerSecond_ = 0D;
        onChanged();
        return this;
      }

      private boolean faceNearestReefAprilTag_ ;
      /**
       * <code>optional bool faceNearestReefAprilTag = 4;</code>
       * @return Whether the faceNearestReefAprilTag field is set.
       */
      @java.lang.Override
      public boolean hasFaceNearestReefAprilTag() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool faceNearestReefAprilTag = 4;</code>
       * @return The faceNearestReefAprilTag.
       */
      @java.lang.Override
      public boolean getFaceNearestReefAprilTag() {
        return faceNearestReefAprilTag_;
      }
      /**
       * <code>optional bool faceNearestReefAprilTag = 4;</code>
       * @param value The faceNearestReefAprilTag to set.
       * @return This builder for chaining.
       */
      public Builder setFaceNearestReefAprilTag(boolean value) {

        faceNearestReefAprilTag_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool faceNearestReefAprilTag = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFaceNearestReefAprilTag() {
        bitField0_ = (bitField0_ & ~0x00000008);
        faceNearestReefAprilTag_ = false;
        onChanged();
        return this;
      }

      private double endFaceNearestReefAprilTagPathThresholdPercentage_ ;
      /**
       * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
       * @return Whether the endFaceNearestReefAprilTagPathThresholdPercentage field is set.
       */
      @java.lang.Override
      public boolean hasEndFaceNearestReefAprilTagPathThresholdPercentage() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
       * @return The endFaceNearestReefAprilTagPathThresholdPercentage.
       */
      @java.lang.Override
      public double getEndFaceNearestReefAprilTagPathThresholdPercentage() {
        return endFaceNearestReefAprilTagPathThresholdPercentage_;
      }
      /**
       * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
       * @param value The endFaceNearestReefAprilTagPathThresholdPercentage to set.
       * @return This builder for chaining.
       */
      public Builder setEndFaceNearestReefAprilTagPathThresholdPercentage(double value) {

        endFaceNearestReefAprilTagPathThresholdPercentage_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional double endFaceNearestReefAprilTagPathThresholdPercentage = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndFaceNearestReefAprilTagPathThresholdPercentage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
        onChanged();
        return this;
      }

      private int faceNearestReefAprilTagDirection_ = 0;
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @return Whether the faceNearestReefAprilTagDirection field is set.
       */
      @java.lang.Override public boolean hasFaceNearestReefAprilTagDirection() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @return The enum numeric value on the wire for faceNearestReefAprilTagDirection.
       */
      @java.lang.Override public int getFaceNearestReefAprilTagDirectionValue() {
        return faceNearestReefAprilTagDirection_;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @param value The enum numeric value on the wire for faceNearestReefAprilTagDirection to set.
       * @return This builder for chaining.
       */
      public Builder setFaceNearestReefAprilTagDirectionValue(int value) {
        faceNearestReefAprilTagDirection_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @return The faceNearestReefAprilTagDirection.
       */
      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection getFaceNearestReefAprilTagDirection() {
        org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection result = org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection.forNumber(faceNearestReefAprilTagDirection_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @param value The faceNearestReefAprilTagDirection to set.
       * @return This builder for chaining.
       */
      public Builder setFaceNearestReefAprilTagDirection(org.kobe.xbot.Utilities.Entities.XTableValues.RobotDirection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        faceNearestReefAprilTagDirection_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.RobotDirection faceNearestReefAprilTagDirection = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFaceNearestReefAprilTagDirection() {
        bitField0_ = (bitField0_ & ~0x00000020);
        faceNearestReefAprilTagDirection_ = 0;
        onChanged();
        return this;
      }

      private double finalRotationTurnSpeedFactor_ ;
      /**
       * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
       * @return Whether the finalRotationTurnSpeedFactor field is set.
       */
      @java.lang.Override
      public boolean hasFinalRotationTurnSpeedFactor() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
       * @return The finalRotationTurnSpeedFactor.
       */
      @java.lang.Override
      public double getFinalRotationTurnSpeedFactor() {
        return finalRotationTurnSpeedFactor_;
      }
      /**
       * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
       * @param value The finalRotationTurnSpeedFactor to set.
       * @return This builder for chaining.
       */
      public Builder setFinalRotationTurnSpeedFactor(double value) {

        finalRotationTurnSpeedFactor_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double finalRotationTurnSpeedFactor = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinalRotationTurnSpeedFactor() {
        bitField0_ = (bitField0_ & ~0x00000040);
        finalRotationTurnSpeedFactor_ = 0D;
        onChanged();
        return this;
      }

      private double startFaceNearestReefAprilTagPathThresholdPercentage_ ;
      /**
       * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
       * @return Whether the startFaceNearestReefAprilTagPathThresholdPercentage field is set.
       */
      @java.lang.Override
      public boolean hasStartFaceNearestReefAprilTagPathThresholdPercentage() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
       * @return The startFaceNearestReefAprilTagPathThresholdPercentage.
       */
      @java.lang.Override
      public double getStartFaceNearestReefAprilTagPathThresholdPercentage() {
        return startFaceNearestReefAprilTagPathThresholdPercentage_;
      }
      /**
       * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
       * @param value The startFaceNearestReefAprilTagPathThresholdPercentage to set.
       * @return This builder for chaining.
       */
      public Builder setStartFaceNearestReefAprilTagPathThresholdPercentage(double value) {

        startFaceNearestReefAprilTagPathThresholdPercentage_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional double startFaceNearestReefAprilTagPathThresholdPercentage = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartFaceNearestReefAprilTagPathThresholdPercentage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        startFaceNearestReefAprilTagPathThresholdPercentage_ = 0D;
        onChanged();
        return this;
      }

      private boolean snapToNearestAprilTag_ ;
      /**
       * <code>optional bool snapToNearestAprilTag = 9;</code>
       * @return Whether the snapToNearestAprilTag field is set.
       */
      @java.lang.Override
      public boolean hasSnapToNearestAprilTag() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool snapToNearestAprilTag = 9;</code>
       * @return The snapToNearestAprilTag.
       */
      @java.lang.Override
      public boolean getSnapToNearestAprilTag() {
        return snapToNearestAprilTag_;
      }
      /**
       * <code>optional bool snapToNearestAprilTag = 9;</code>
       * @param value The snapToNearestAprilTag to set.
       * @return This builder for chaining.
       */
      public Builder setSnapToNearestAprilTag(boolean value) {

        snapToNearestAprilTag_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool snapToNearestAprilTag = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSnapToNearestAprilTag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        snapToNearestAprilTag_ = false;
        onChanged();
        return this;
      }

      private double aprilTagRotationDegreesTurnSpeedFactorPerStep_ ;
      /**
       * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
       * @return Whether the aprilTagRotationDegreesTurnSpeedFactorPerStep field is set.
       */
      @java.lang.Override
      public boolean hasAprilTagRotationDegreesTurnSpeedFactorPerStep() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
       * @return The aprilTagRotationDegreesTurnSpeedFactorPerStep.
       */
      @java.lang.Override
      public double getAprilTagRotationDegreesTurnSpeedFactorPerStep() {
        return aprilTagRotationDegreesTurnSpeedFactorPerStep_;
      }
      /**
       * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
       * @param value The aprilTagRotationDegreesTurnSpeedFactorPerStep to set.
       * @return This builder for chaining.
       */
      public Builder setAprilTagRotationDegreesTurnSpeedFactorPerStep(double value) {

        aprilTagRotationDegreesTurnSpeedFactorPerStep_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional double aprilTagRotationDegreesTurnSpeedFactorPerStep = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAprilTagRotationDegreesTurnSpeedFactorPerStep() {
        bitField0_ = (bitField0_ & ~0x00000200);
        aprilTagRotationDegreesTurnSpeedFactorPerStep_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.TraversalOptions)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.TraversalOptions)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TraversalOptions>
        PARSER = new com.google.protobuf.AbstractParser<TraversalOptions>() {
      @java.lang.Override
      public TraversalOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TraversalOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TraversalOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BezierCurvesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.BezierCurves)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> 
        getCurvesList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getCurves(int index);
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    int getCurvesCount();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder> 
        getCurvesOrBuilderList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder getCurvesOrBuilder(
        int index);

    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     * @return Whether the options field is set.
     */
    boolean hasOptions();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     * @return The options.
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurves}
   */
  public static final class BezierCurves extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.BezierCurves)
      BezierCurvesOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        BezierCurves.class.getName());
    }
    // Use BezierCurves.newBuilder() to construct.
    private BezierCurves(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BezierCurves() {
      curves_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder.class);
    }

    private int bitField0_;
    public static final int CURVES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> curves_;
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> getCurvesList() {
      return curves_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder> 
        getCurvesOrBuilderList() {
      return curves_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    @java.lang.Override
    public int getCurvesCount() {
      return curves_.size();
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getCurves(int index) {
      return curves_.get(index);
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder getCurvesOrBuilder(
        int index) {
      return curves_.get(index);
    }

    public static final int OPTIONS_FIELD_NUMBER = 2;
    private org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions options_;
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     * @return Whether the options field is set.
     */
    @java.lang.Override
    public boolean hasOptions() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     * @return The options.
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions() {
      return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder() {
      return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < curves_.size(); i++) {
        output.writeMessage(1, curves_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getOptions());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < curves_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, curves_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOptions());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves other = (org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves) obj;

      if (!getCurvesList()
          .equals(other.getCurvesList())) return false;
      if (hasOptions() != other.hasOptions()) return false;
      if (hasOptions()) {
        if (!getOptions()
            .equals(other.getOptions())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCurvesCount() > 0) {
        hash = (37 * hash) + CURVES_FIELD_NUMBER;
        hash = (53 * hash) + getCurvesList().hashCode();
      }
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurves}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.BezierCurves)
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCurvesFieldBuilder();
          getOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (curvesBuilder_ == null) {
          curves_ = java.util.Collections.emptyList();
        } else {
          curves_ = null;
          curvesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        options_ = null;
        if (optionsBuilder_ != null) {
          optionsBuilder_.dispose();
          optionsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves result = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves result) {
        if (curvesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            curves_ = java.util.Collections.unmodifiableList(curves_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.curves_ = curves_;
        } else {
          result.curves_ = curvesBuilder_.build();
        }
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.options_ = optionsBuilder_ == null
              ? options_
              : optionsBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.getDefaultInstance()) return this;
        if (curvesBuilder_ == null) {
          if (!other.curves_.isEmpty()) {
            if (curves_.isEmpty()) {
              curves_ = other.curves_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCurvesIsMutable();
              curves_.addAll(other.curves_);
            }
            onChanged();
          }
        } else {
          if (!other.curves_.isEmpty()) {
            if (curvesBuilder_.isEmpty()) {
              curvesBuilder_.dispose();
              curvesBuilder_ = null;
              curves_ = other.curves_;
              bitField0_ = (bitField0_ & ~0x00000001);
              curvesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCurvesFieldBuilder() : null;
            } else {
              curvesBuilder_.addAllMessages(other.curves_);
            }
          }
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve m =
                    input.readMessage(
                        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.parser(),
                        extensionRegistry);
                if (curvesBuilder_ == null) {
                  ensureCurvesIsMutable();
                  curves_.add(m);
                } else {
                  curvesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> curves_ =
        java.util.Collections.emptyList();
      private void ensureCurvesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          curves_ = new java.util.ArrayList<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve>(curves_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder> curvesBuilder_;

      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> getCurvesList() {
        if (curvesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(curves_);
        } else {
          return curvesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public int getCurvesCount() {
        if (curvesBuilder_ == null) {
          return curves_.size();
        } else {
          return curvesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve getCurves(int index) {
        if (curvesBuilder_ == null) {
          return curves_.get(index);
        } else {
          return curvesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder setCurves(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve value) {
        if (curvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurvesIsMutable();
          curves_.set(index, value);
          onChanged();
        } else {
          curvesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder setCurves(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder builderForValue) {
        if (curvesBuilder_ == null) {
          ensureCurvesIsMutable();
          curves_.set(index, builderForValue.build());
          onChanged();
        } else {
          curvesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder addCurves(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve value) {
        if (curvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurvesIsMutable();
          curves_.add(value);
          onChanged();
        } else {
          curvesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder addCurves(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve value) {
        if (curvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurvesIsMutable();
          curves_.add(index, value);
          onChanged();
        } else {
          curvesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder addCurves(
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder builderForValue) {
        if (curvesBuilder_ == null) {
          ensureCurvesIsMutable();
          curves_.add(builderForValue.build());
          onChanged();
        } else {
          curvesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder addCurves(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder builderForValue) {
        if (curvesBuilder_ == null) {
          ensureCurvesIsMutable();
          curves_.add(index, builderForValue.build());
          onChanged();
        } else {
          curvesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder addAllCurves(
          java.lang.Iterable<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve> values) {
        if (curvesBuilder_ == null) {
          ensureCurvesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, curves_);
          onChanged();
        } else {
          curvesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder clearCurves() {
        if (curvesBuilder_ == null) {
          curves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          curvesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public Builder removeCurves(int index) {
        if (curvesBuilder_ == null) {
          ensureCurvesIsMutable();
          curves_.remove(index);
          onChanged();
        } else {
          curvesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder getCurvesBuilder(
          int index) {
        return getCurvesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder getCurvesOrBuilder(
          int index) {
        if (curvesBuilder_ == null) {
          return curves_.get(index);  } else {
          return curvesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder> 
           getCurvesOrBuilderList() {
        if (curvesBuilder_ != null) {
          return curvesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(curves_);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder addCurvesBuilder() {
        return getCurvesFieldBuilder().addBuilder(
            org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder addCurvesBuilder(
          int index) {
        return getCurvesFieldBuilder().addBuilder(
            index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurve curves = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder> 
           getCurvesBuilderList() {
        return getCurvesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder> 
          getCurvesFieldBuilder() {
        if (curvesBuilder_ == null) {
          curvesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurve.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurveOrBuilder>(
                  curves_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          curves_ = null;
        }
        return curvesBuilder_;
      }

      private org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions options_;
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder> optionsBuilder_;
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       * @return Whether the options field is set.
       */
      public boolean hasOptions() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       * @return The options.
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public Builder setOptions(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
        } else {
          optionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public Builder setOptions(
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public Builder mergeOptions(org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions value) {
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            options_ != null &&
            options_ != org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance()) {
            getOptionsBuilder().mergeFrom(value);
          } else {
            options_ = value;
          }
        } else {
          optionsBuilder_.mergeFrom(value);
        }
        if (options_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public Builder clearOptions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        options_ = null;
        if (optionsBuilder_ != null) {
          optionsBuilder_.dispose();
          optionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder getOptionsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.TraversalOptions options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptions.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.TraversalOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.BezierCurves)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.BezierCurves)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BezierCurves>
        PARSER = new com.google.protobuf.AbstractParser<BezierCurves>() {
      @java.lang.Override
      public BezierCurves parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BezierCurves> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BezierCurves> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BezierCurvesListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.BezierCurvesList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> 
        getVList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getV(int index);
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    int getVCount();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder> 
        getVOrBuilderList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder getVOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurvesList}
   */
  public static final class BezierCurvesList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.BezierCurvesList)
      BezierCurvesListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        BezierCurvesList.class.getName());
    }
    // Use BezierCurvesList.newBuilder() to construct.
    private BezierCurvesList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BezierCurvesList() {
      v_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> v_;
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> getVList() {
      return v_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder> 
        getVOrBuilderList() {
      return v_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    @java.lang.Override
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getV(int index) {
      return v_.get(index);
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder getVOrBuilder(
        int index) {
      return v_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < v_.size(); i++) {
        output.writeMessage(1, v_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < v_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, v_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList other = (org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BezierCurvesList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.BezierCurvesList)
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (vBuilder_ == null) {
          v_ = java.util.Collections.emptyList();
        } else {
          v_ = null;
          vBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList result = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList result) {
        if (vBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            v_ = java.util.Collections.unmodifiableList(v_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.v_ = v_;
        } else {
          result.v_ = vBuilder_.build();
        }
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList.getDefaultInstance()) return this;
        if (vBuilder_ == null) {
          if (!other.v_.isEmpty()) {
            if (v_.isEmpty()) {
              v_ = other.v_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVIsMutable();
              v_.addAll(other.v_);
            }
            onChanged();
          }
        } else {
          if (!other.v_.isEmpty()) {
            if (vBuilder_.isEmpty()) {
              vBuilder_.dispose();
              vBuilder_ = null;
              v_ = other.v_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVFieldBuilder() : null;
            } else {
              vBuilder_.addAllMessages(other.v_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves m =
                    input.readMessage(
                        org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.parser(),
                        extensionRegistry);
                if (vBuilder_ == null) {
                  ensureVIsMutable();
                  v_.add(m);
                } else {
                  vBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> v_ =
        java.util.Collections.emptyList();
      private void ensureVIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          v_ = new java.util.ArrayList<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves>(v_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder> vBuilder_;

      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> getVList() {
        if (vBuilder_ == null) {
          return java.util.Collections.unmodifiableList(v_);
        } else {
          return vBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public int getVCount() {
        if (vBuilder_ == null) {
          return v_.size();
        } else {
          return vBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves getV(int index) {
        if (vBuilder_ == null) {
          return v_.get(index);
        } else {
          return vBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder setV(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves value) {
        if (vBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVIsMutable();
          v_.set(index, value);
          onChanged();
        } else {
          vBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder setV(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder builderForValue) {
        if (vBuilder_ == null) {
          ensureVIsMutable();
          v_.set(index, builderForValue.build());
          onChanged();
        } else {
          vBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder addV(org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves value) {
        if (vBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVIsMutable();
          v_.add(value);
          onChanged();
        } else {
          vBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder addV(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves value) {
        if (vBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVIsMutable();
          v_.add(index, value);
          onChanged();
        } else {
          vBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder addV(
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder builderForValue) {
        if (vBuilder_ == null) {
          ensureVIsMutable();
          v_.add(builderForValue.build());
          onChanged();
        } else {
          vBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder addV(
          int index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder builderForValue) {
        if (vBuilder_ == null) {
          ensureVIsMutable();
          v_.add(index, builderForValue.build());
          onChanged();
        } else {
          vBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder addAllV(
          java.lang.Iterable<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves> values) {
        if (vBuilder_ == null) {
          ensureVIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, v_);
          onChanged();
        } else {
          vBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder clearV() {
        if (vBuilder_ == null) {
          v_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public Builder removeV(int index) {
        if (vBuilder_ == null) {
          ensureVIsMutable();
          v_.remove(index);
          onChanged();
        } else {
          vBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder getVBuilder(
          int index) {
        return getVFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder getVOrBuilder(
          int index) {
        if (vBuilder_ == null) {
          return v_.get(index);  } else {
          return vBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder> 
           getVOrBuilderList() {
        if (vBuilder_ != null) {
          return vBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(v_);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder addVBuilder() {
        return getVFieldBuilder().addBuilder(
            org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder addVBuilder(
          int index) {
        return getVFieldBuilder().addBuilder(
            index, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.BezierCurves v = 1;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder> 
           getVBuilderList() {
        return getVFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder> 
          getVFieldBuilder() {
        if (vBuilder_ == null) {
          vBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurves.Builder, org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesOrBuilder>(
                  v_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          v_ = null;
        }
        return vBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.BezierCurvesList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.BezierCurvesList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BezierCurvesList>
        PARSER = new com.google.protobuf.AbstractParser<BezierCurvesList>() {
      @java.lang.Override
      public BezierCurvesList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BezierCurvesList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BezierCurvesList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BezierCurvesList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DoubleListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.DoubleList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.Double> getVList();
    /**
     * <code>repeated double v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated double v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    double getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.DoubleList}
   */
  public static final class DoubleList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.DoubleList)
      DoubleListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        DoubleList.class.getName());
    }
    // Use DoubleList.newBuilder() to construct.
    private DoubleList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DoubleList() {
      v_ = emptyDoubleList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.class, org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList v_ =
        emptyDoubleList();
    /**
     * <code>repeated double v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated double v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated double v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public double getV(int index) {
      return v_.getDouble(index);
    }
    private int vMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getVList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(vMemoizedSerializedSize);
      }
      for (int i = 0; i < v_.size(); i++) {
        output.writeDoubleNoTag(v_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getVList().size();
        size += dataSize;
        if (!getVList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList other = (org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.DoubleList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.DoubleList)
        org.kobe.xbot.Utilities.Entities.XTableValues.DoubleListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.class, org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList result = new org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                double v = input.readDouble();
                ensureVIsMutable();
                v_.addDouble(v);
                break;
              } // case 9
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureVIsMutable(alloc / 8);
                while (input.getBytesUntilLimit() > 0) {
                  v_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList v_ = emptyDoubleList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      private void ensureVIsMutable(int capacity) {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_, capacity);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated double v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<java.lang.Double>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated double v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated double v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public double getV(int index) {
        return v_.getDouble(index);
      }
      /**
       * <code>repeated double v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, double value) {

        ensureVIsMutable();
        v_.setDouble(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(double value) {

        ensureVIsMutable();
        v_.addDouble(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated double v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.DoubleList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.DoubleList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DoubleList>
        PARSER = new com.google.protobuf.AbstractParser<DoubleList>() {
      @java.lang.Override
      public DoubleList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DoubleList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DoubleList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.DoubleList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StringListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.StringList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.String>
        getVList();
    /**
     * <code>repeated string v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated string v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    java.lang.String getV(int index);
    /**
     * <code>repeated string v = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the v at the given index.
     */
    com.google.protobuf.ByteString
        getVBytes(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.StringList}
   */
  public static final class StringList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.StringList)
      StringListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        StringList.class.getName());
    }
    // Use StringList.newBuilder() to construct.
    private StringList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private StringList() {
      v_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_StringList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.StringList.class, org.kobe.xbot.Utilities.Entities.XTableValues.StringList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList v_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string v = 1;</code>
     * @return A list containing the v.
     */
    public com.google.protobuf.ProtocolStringList
        getVList() {
      return v_;
    }
    /**
     * <code>repeated string v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated string v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public java.lang.String getV(int index) {
      return v_.get(index);
    }
    /**
     * <code>repeated string v = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the v at the given index.
     */
    public com.google.protobuf.ByteString
        getVBytes(int index) {
      return v_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < v_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, v_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < v_.size(); i++) {
          dataSize += computeStringSizeNoTag(v_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getVList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.StringList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.StringList other = (org.kobe.xbot.Utilities.Entities.XTableValues.StringList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.StringList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.StringList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.StringList)
        org.kobe.xbot.Utilities.Entities.XTableValues.StringListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_StringList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.StringList.class, org.kobe.xbot.Utilities.Entities.XTableValues.StringList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.StringList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.StringList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.StringList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.StringList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.StringList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.StringList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.StringList result = new org.kobe.xbot.Utilities.Entities.XTableValues.StringList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.StringList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.StringList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.StringList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.StringList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.StringList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureVIsMutable();
                v_.add(s);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList v_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = new com.google.protobuf.LazyStringArrayList(v_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @return A list containing the v.
       */
      public com.google.protobuf.ProtocolStringList
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public java.lang.String getV(int index) {
        return v_.get(index);
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the v at the given index.
       */
      public com.google.protobuf.ByteString
          getVBytes(int index) {
        return v_.getByteString(index);
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVIsMutable();
        v_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVIsMutable();
        v_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<java.lang.String> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string v = 1;</code>
       * @param value The bytes of the v to add.
       * @return This builder for chaining.
       */
      public Builder addVBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureVIsMutable();
        v_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.StringList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.StringList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.StringList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.StringList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.StringList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StringList>
        PARSER = new com.google.protobuf.AbstractParser<StringList>() {
      @java.lang.Override
      public StringList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StringList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StringList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.StringList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntegerListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.IntegerList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.Integer> getVList();
    /**
     * <code>repeated int32 v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated int32 v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    int getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.IntegerList}
   */
  public static final class IntegerList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.IntegerList)
      IntegerListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        IntegerList.class.getName());
    }
    // Use IntegerList.newBuilder() to construct.
    private IntegerList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IntegerList() {
      v_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.class, org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList v_ =
        emptyIntList();
    /**
     * <code>repeated int32 v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated int32 v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated int32 v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public int getV(int index) {
      return v_.getInt(index);
    }
    private int vMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getVList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(vMemoizedSerializedSize);
      }
      for (int i = 0; i < v_.size(); i++) {
        output.writeInt32NoTag(v_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < v_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(v_.getInt(i));
        }
        size += dataSize;
        if (!getVList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList other = (org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.IntegerList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.IntegerList)
        org.kobe.xbot.Utilities.Entities.XTableValues.IntegerListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.class, org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList result = new org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readInt32();
                ensureVIsMutable();
                v_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureVIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  v_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList v_ = emptyIntList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<java.lang.Integer>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public int getV(int index) {
        return v_.getInt(index);
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, int value) {

        ensureVIsMutable();
        v_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(int value) {

        ensureVIsMutable();
        v_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.IntegerList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.IntegerList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IntegerList>
        PARSER = new com.google.protobuf.AbstractParser<IntegerList>() {
      @java.lang.Override
      public IntegerList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IntegerList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IntegerList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.IntegerList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BytesListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.BytesList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bytes v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<com.google.protobuf.ByteString> getVList();
    /**
     * <code>repeated bytes v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated bytes v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    com.google.protobuf.ByteString getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BytesList}
   */
  public static final class BytesList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.BytesList)
      BytesListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        BytesList.class.getName());
    }
    // Use BytesList.newBuilder() to construct.
    private BytesList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BytesList() {
      v_ = emptyList(com.google.protobuf.ByteString.class);
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BytesList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> v_ =
        emptyList(com.google.protobuf.ByteString.class);
    /**
     * <code>repeated bytes v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated bytes v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated bytes v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public com.google.protobuf.ByteString getV(int index) {
      return v_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < v_.size(); i++) {
        output.writeBytes(1, v_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < v_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(v_.get(i));
        }
        size += dataSize;
        size += 1 * getVList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BytesList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.BytesList other = (org.kobe.xbot.Utilities.Entities.XTableValues.BytesList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.BytesList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BytesList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.BytesList)
        org.kobe.xbot.Utilities.Entities.XTableValues.BytesListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BytesList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyList(com.google.protobuf.ByteString.class);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BytesList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BytesList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BytesList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BytesList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BytesList result = new org.kobe.xbot.Utilities.Entities.XTableValues.BytesList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.BytesList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BytesList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.BytesList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.BytesList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.BytesList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString v = input.readBytes();
                ensureVIsMutable();
                v_.add(v);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> v_ = emptyList(com.google.protobuf.ByteString.class);
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<com.google.protobuf.ByteString>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public com.google.protobuf.ByteString getV(int index) {
        return v_.get(index);
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVIsMutable();
        v_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureVIsMutable();
        v_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyList(com.google.protobuf.ByteString.class);
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.BytesList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.BytesList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.BytesList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.BytesList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BytesList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BytesList>
        PARSER = new com.google.protobuf.AbstractParser<BytesList>() {
      @java.lang.Override
      public BytesList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BytesList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BytesList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BytesList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LongListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.LongList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.Long> getVList();
    /**
     * <code>repeated int64 v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated int64 v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    long getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.LongList}
   */
  public static final class LongList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.LongList)
      LongListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        LongList.class.getName());
    }
    // Use LongList.newBuilder() to construct.
    private LongList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LongList() {
      v_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_LongList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.LongList.class, org.kobe.xbot.Utilities.Entities.XTableValues.LongList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList v_ =
        emptyLongList();
    /**
     * <code>repeated int64 v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated int64 v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated int64 v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public long getV(int index) {
      return v_.getLong(index);
    }
    private int vMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getVList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(vMemoizedSerializedSize);
      }
      for (int i = 0; i < v_.size(); i++) {
        output.writeInt64NoTag(v_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < v_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(v_.getLong(i));
        }
        size += dataSize;
        if (!getVList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.LongList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.LongList other = (org.kobe.xbot.Utilities.Entities.XTableValues.LongList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.LongList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.LongList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.LongList)
        org.kobe.xbot.Utilities.Entities.XTableValues.LongListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_LongList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.LongList.class, org.kobe.xbot.Utilities.Entities.XTableValues.LongList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.LongList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.LongList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.LongList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.LongList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.LongList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.LongList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.LongList result = new org.kobe.xbot.Utilities.Entities.XTableValues.LongList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.LongList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.LongList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.LongList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.LongList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.LongList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureVIsMutable();
                v_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureVIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  v_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList v_ = emptyLongList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<java.lang.Long>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public long getV(int index) {
        return v_.getLong(index);
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, long value) {

        ensureVIsMutable();
        v_.setLong(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(long value) {

        ensureVIsMutable();
        v_.addLong(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.LongList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.LongList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.LongList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.LongList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.LongList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LongList>
        PARSER = new com.google.protobuf.AbstractParser<LongList>() {
      @java.lang.Override
      public LongList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LongList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LongList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.LongList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FloatListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.FloatList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated float v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.Float> getVList();
    /**
     * <code>repeated float v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated float v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    float getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.FloatList}
   */
  public static final class FloatList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.FloatList)
      FloatListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        FloatList.class.getName());
    }
    // Use FloatList.newBuilder() to construct.
    private FloatList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private FloatList() {
      v_ = emptyFloatList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_FloatList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.class, org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList v_ =
        emptyFloatList();
    /**
     * <code>repeated float v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated float v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated float v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public float getV(int index) {
      return v_.getFloat(index);
    }
    private int vMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getVList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(vMemoizedSerializedSize);
      }
      for (int i = 0; i < v_.size(); i++) {
        output.writeFloatNoTag(v_.getFloat(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getVList().size();
        size += dataSize;
        if (!getVList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.FloatList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.FloatList other = (org.kobe.xbot.Utilities.Entities.XTableValues.FloatList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.FloatList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.FloatList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.FloatList)
        org.kobe.xbot.Utilities.Entities.XTableValues.FloatListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_FloatList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.class, org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyFloatList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.FloatList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.FloatList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.FloatList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.FloatList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.FloatList result = new org.kobe.xbot.Utilities.Entities.XTableValues.FloatList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.FloatList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.FloatList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.FloatList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.FloatList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.FloatList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                float v = input.readFloat();
                ensureVIsMutable();
                v_.addFloat(v);
                break;
              } // case 13
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureVIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  v_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.FloatList v_ = emptyFloatList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      private void ensureVIsMutable(int capacity) {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_, capacity);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated float v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<java.lang.Float>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated float v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated float v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public float getV(int index) {
        return v_.getFloat(index);
      }
      /**
       * <code>repeated float v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, float value) {

        ensureVIsMutable();
        v_.setFloat(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(float value) {

        ensureVIsMutable();
        v_.addFloat(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated float v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.FloatList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.FloatList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.FloatList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.FloatList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.FloatList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FloatList>
        PARSER = new com.google.protobuf.AbstractParser<FloatList>() {
      @java.lang.Override
      public FloatList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FloatList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FloatList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.FloatList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoolListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.BoolList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bool v = 1;</code>
     * @return A list containing the v.
     */
    java.util.List<java.lang.Boolean> getVList();
    /**
     * <code>repeated bool v = 1;</code>
     * @return The count of v.
     */
    int getVCount();
    /**
     * <code>repeated bool v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    boolean getV(int index);
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BoolList}
   */
  public static final class BoolList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.BoolList)
      BoolListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        BoolList.class.getName());
    }
    // Use BoolList.newBuilder() to construct.
    private BoolList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BoolList() {
      v_ = emptyBooleanList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BoolList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.Builder.class);
    }

    public static final int V_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList v_ =
        emptyBooleanList();
    /**
     * <code>repeated bool v = 1;</code>
     * @return A list containing the v.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getVList() {
      return v_;
    }
    /**
     * <code>repeated bool v = 1;</code>
     * @return The count of v.
     */
    public int getVCount() {
      return v_.size();
    }
    /**
     * <code>repeated bool v = 1;</code>
     * @param index The index of the element to return.
     * @return The v at the given index.
     */
    public boolean getV(int index) {
      return v_.getBoolean(index);
    }
    private int vMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getVList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(vMemoizedSerializedSize);
      }
      for (int i = 0; i < v_.size(); i++) {
        output.writeBoolNoTag(v_.getBoolean(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * getVList().size();
        size += dataSize;
        if (!getVList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        vMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BoolList)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableValues.BoolList other = (org.kobe.xbot.Utilities.Entities.XTableValues.BoolList) obj;

      if (!getVList()
          .equals(other.getVList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVCount() > 0) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + getVList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableValues.BoolList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.BoolList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.BoolList)
        org.kobe.xbot.Utilities.Entities.XTableValues.BoolListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BoolList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.class, org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        v_ = emptyBooleanList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BoolList getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BoolList build() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BoolList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableValues.BoolList buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableValues.BoolList result = new org.kobe.xbot.Utilities.Entities.XTableValues.BoolList(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableValues.BoolList result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          v_.makeImmutable();
          result.v_ = v_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableValues.BoolList) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableValues.BoolList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableValues.BoolList other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableValues.BoolList.getDefaultInstance()) return this;
        if (!other.v_.isEmpty()) {
          if (v_.isEmpty()) {
            v_ = other.v_;
            v_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureVIsMutable();
            v_.addAll(other.v_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                boolean v = input.readBool();
                ensureVIsMutable();
                v_.addBoolean(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureVIsMutable(alloc / 1);
                while (input.getBytesUntilLimit() > 0) {
                  v_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.BooleanList v_ = emptyBooleanList();
      private void ensureVIsMutable() {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_);
        }
        bitField0_ |= 0x00000001;
      }
      private void ensureVIsMutable(int capacity) {
        if (!v_.isModifiable()) {
          v_ = makeMutableCopy(v_, capacity);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @return A list containing the v.
       */
      public java.util.List<java.lang.Boolean>
          getVList() {
        v_.makeImmutable();
        return v_;
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @return The count of v.
       */
      public int getVCount() {
        return v_.size();
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @param index The index of the element to return.
       * @return The v at the given index.
       */
      public boolean getV(int index) {
        return v_.getBoolean(index);
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @param index The index to set the value at.
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(
          int index, boolean value) {

        ensureVIsMutable();
        v_.setBoolean(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @param value The v to add.
       * @return This builder for chaining.
       */
      public Builder addV(boolean value) {

        ensureVIsMutable();
        v_.addBoolean(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @param values The v to add.
       * @return This builder for chaining.
       */
      public Builder addAllV(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureVIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, v_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool v = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        v_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.BoolList)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.BoolList)
    private static final org.kobe.xbot.Utilities.Entities.XTableValues.BoolList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableValues.BoolList();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableValues.BoolList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoolList>
        PARSER = new com.google.protobuf.AbstractParser<BoolList>() {
      @java.lang.Override
      public BoolList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BoolList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BoolList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableValues.BoolList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_StringList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_BytesList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_LongList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_FloatList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_BoolList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022XTableValues.proto\022 org.kobe.xbot.Util" +
      "ities.Entities\"\"\n\nCoordinate\022\t\n\001x\030\001 \001(\001\022" +
      "\t\n\001y\030\002 \001(\001\"S\n\016CoordinateList\022A\n\013coordina" +
      "tes\030\001 \003(\0132,.org.kobe.xbot.Utilities.Enti" +
      "ties.Coordinate\"V\n\014ControlPoint\022\t\n\001x\030\001 \001" +
      "(\001\022\t\n\001y\030\002 \001(\001\022\034\n\017rotationDegrees\030\003 \001(\001H\000" +
      "\210\001\001B\022\n\020_rotationDegrees\"T\n\013BezierCurve\022E" +
      "\n\rcontrolPoints\030\001 \003(\0132..org.kobe.xbot.Ut" +
      "ilities.Entities.ControlPoint\"\232\002\n\037Reques" +
      "tVisionCoprocessorMessage\022=\n\005start\030\001 \001(\013" +
      "2..org.kobe.xbot.Utilities.Entities.Cont" +
      "rolPoint\022;\n\003end\030\002 \001(\0132..org.kobe.xbot.Ut" +
      "ilities.Entities.ControlPoint\022C\n\007options" +
      "\030\003 \001(\01322.org.kobe.xbot.Utilities.Entitie" +
      "s.TraversalOptions\022\037\n\022safeDistanceInches" +
      "\030\004 \001(\001H\000\210\001\001B\025\n\023_safeDistanceInches\"\372\006\n\020T" +
      "raversalOptions\022\034\n\017metersPerSecond\030\001 \001(\001" +
      "H\000\210\001\001\022!\n\024finalRotationDegrees\030\002 \001(\001H\001\210\001\001" +
      "\022(\n\033accelerationMetersPerSecond\030\003 \001(\001H\002\210" +
      "\001\001\022$\n\027faceNearestReefAprilTag\030\004 \001(\010H\003\210\001\001" +
      "\022>\n1endFaceNearestReefAprilTagPathThresh" +
      "oldPercentage\030\005 \001(\001H\004\210\001\001\022_\n faceNearestR" +
      "eefAprilTagDirection\030\006 \001(\01620.org.kobe.xb" +
      "ot.Utilities.Entities.RobotDirectionH\005\210\001" +
      "\001\022)\n\034finalRotationTurnSpeedFactor\030\007 \001(\001H" +
      "\006\210\001\001\022@\n3startFaceNearestReefAprilTagPath" +
      "ThresholdPercentage\030\010 \001(\001H\007\210\001\001\022\"\n\025snapTo" +
      "NearestAprilTag\030\t \001(\010H\010\210\001\001\022:\n-aprilTagRo" +
      "tationDegreesTurnSpeedFactorPerStep\030\n \001(" +
      "\001H\t\210\001\001B\022\n\020_metersPerSecondB\027\n\025_finalRota" +
      "tionDegreesB\036\n\034_accelerationMetersPerSec" +
      "ondB\032\n\030_faceNearestReefAprilTagB4\n2_endF" +
      "aceNearestReefAprilTagPathThresholdPerce" +
      "ntageB#\n!_faceNearestReefAprilTagDirecti" +
      "onB\037\n\035_finalRotationTurnSpeedFactorB6\n4_" +
      "startFaceNearestReefAprilTagPathThreshol" +
      "dPercentageB\030\n\026_snapToNearestAprilTagB0\n" +
      "._aprilTagRotationDegreesTurnSpeedFactor" +
      "PerStep\"\243\001\n\014BezierCurves\022=\n\006curves\030\001 \003(\013" +
      "2-.org.kobe.xbot.Utilities.Entities.Bezi" +
      "erCurve\022H\n\007options\030\002 \001(\01322.org.kobe.xbot" +
      ".Utilities.Entities.TraversalOptionsH\000\210\001" +
      "\001B\n\n\010_options\"M\n\020BezierCurvesList\0229\n\001v\030\001" +
      " \003(\0132..org.kobe.xbot.Utilities.Entities." +
      "BezierCurves\"\027\n\nDoubleList\022\t\n\001v\030\001 \003(\001\"\027\n" +
      "\nStringList\022\t\n\001v\030\001 \003(\t\"\030\n\013IntegerList\022\t\n" +
      "\001v\030\001 \003(\005\"\026\n\tBytesList\022\t\n\001v\030\001 \003(\014\"\025\n\010Long" +
      "List\022\t\n\001v\030\001 \003(\003\"\026\n\tFloatList\022\t\n\001v\030\001 \003(\002\"" +
      "\025\n\010BoolList\022\t\n\001v\030\001 \003(\010*%\n\016RobotDirection" +
      "\022\t\n\005FRONT\020\000\022\010\n\004BACK\020\0012\247\001\n\021VisionCoproces" +
      "sor\022\221\001\n\034RequestBezierPathWithOptions\022A.o" +
      "rg.kobe.xbot.Utilities.Entities.RequestV" +
      "isionCoprocessorMessage\032..org.kobe.xbot." +
      "Utilities.Entities.BezierCurvesb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_Coordinate_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_CoordinateList_descriptor,
        new java.lang.String[] { "Coordinates", });
    internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_ControlPoint_descriptor,
        new java.lang.String[] { "X", "Y", "RotationDegrees", });
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_BezierCurve_descriptor,
        new java.lang.String[] { "ControlPoints", });
    internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_RequestVisionCoprocessorMessage_descriptor,
        new java.lang.String[] { "Start", "End", "Options", "SafeDistanceInches", });
    internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_TraversalOptions_descriptor,
        new java.lang.String[] { "MetersPerSecond", "FinalRotationDegrees", "AccelerationMetersPerSecond", "FaceNearestReefAprilTag", "EndFaceNearestReefAprilTagPathThresholdPercentage", "FaceNearestReefAprilTagDirection", "FinalRotationTurnSpeedFactor", "StartFaceNearestReefAprilTagPathThresholdPercentage", "SnapToNearestAprilTag", "AprilTagRotationDegreesTurnSpeedFactorPerStep", });
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_BezierCurves_descriptor,
        new java.lang.String[] { "Curves", "Options", });
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_BezierCurvesList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_DoubleList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_org_kobe_xbot_Utilities_Entities_StringList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_StringList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_IntegerList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_org_kobe_xbot_Utilities_Entities_BytesList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_BytesList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_org_kobe_xbot_Utilities_Entities_LongList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_LongList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_org_kobe_xbot_Utilities_Entities_FloatList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_FloatList_descriptor,
        new java.lang.String[] { "V", });
    internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_org_kobe_xbot_Utilities_Entities_BoolList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_BoolList_descriptor,
        new java.lang.String[] { "V", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
