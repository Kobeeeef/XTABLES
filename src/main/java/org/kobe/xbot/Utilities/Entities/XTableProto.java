// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/XTableProto.proto

// Protobuf Java Version: 3.25.6
package org.kobe.xbot.Utilities.Entities;

public final class XTableProto {
  private XTableProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface XTableMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.XTableMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
     * @return The enum numeric value on the wire for command.
     */
    int getCommandValue();
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
     * @return The command.
     */
    org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command getCommand();

    /**
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>optional bytes value = 3;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>optional bytes value = 3;</code>
     * @return The value.
     */
    com.google.protobuf.ByteString getValue();

    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return The type.
     */
    org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType();

    /**
     * <code>optional bytes id = 5;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional bytes id = 5;</code>
     * @return The id.
     */
    com.google.protobuf.ByteString getId();

    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> 
        getBatchList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getBatch(int index);
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    int getBatchCount();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder> 
        getBatchOrBuilderList();
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder getBatchOrBuilder(
        int index);

    /**
     * <code>optional uint64 timestamp = 7;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 7;</code>
     * @return The timestamp.
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage}
   */
  public static final class XTableMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.XTableMessage)
      XTableMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use XTableMessage.newBuilder() to construct.
    private XTableMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private XTableMessage() {
      command_ = 0;
      key_ = "";
      value_ = com.google.protobuf.ByteString.EMPTY;
      type_ = 0;
      id_ = com.google.protobuf.ByteString.EMPTY;
      batch_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new XTableMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code org.kobe.xbot.Utilities.Entities.XTableMessage.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>STRING = 1;</code>
       */
      STRING(1),
      /**
       * <code>DOUBLE = 2;</code>
       */
      DOUBLE(2),
      /**
       * <code>INT32 = 3;</code>
       */
      INT32(3),
      /**
       * <code>INT64 = 5;</code>
       */
      INT64(5),
      /**
       * <code>BOOL = 6;</code>
       */
      BOOL(6),
      /**
       * <code>BYTES = 7;</code>
       */
      BYTES(7),
      /**
       * <code>ENUM = 8;</code>
       */
      ENUM(8),
      /**
       * <code>MESSAGE = 9;</code>
       */
      MESSAGE(9),
      /**
       * <code>DOUBLE_LIST = 10;</code>
       */
      DOUBLE_LIST(10),
      /**
       * <code>STRING_LIST = 11;</code>
       */
      STRING_LIST(11),
      /**
       * <code>FLOAT_LIST = 12;</code>
       */
      FLOAT_LIST(12),
      /**
       * <code>INTEGER_LIST = 13;</code>
       */
      INTEGER_LIST(13),
      /**
       * <code>LONG_LIST = 14;</code>
       */
      LONG_LIST(14),
      /**
       * <code>BOOLEAN_LIST = 15;</code>
       */
      BOOLEAN_LIST(15),
      /**
       * <code>BYTES_LIST = 16;</code>
       */
      BYTES_LIST(16),
      /**
       * <code>OBJECT = 17;</code>
       */
      OBJECT(17),
      /**
       * <code>POSE2D = 18;</code>
       */
      POSE2D(18),
      /**
       * <code>POSE3D = 19;</code>
       */
      POSE3D(19),
      /**
       * <code>COORDINATES = 20;</code>
       */
      COORDINATES(20),
      /**
       * <code>BEZIER_CURVES = 21;</code>
       */
      BEZIER_CURVES(21),
      /**
       * <code>BEZIER_CURVE = 22;</code>
       */
      BEZIER_CURVE(22),
      /**
       * <code>BEZIER_CURVES_LIST = 23;</code>
       */
      BEZIER_CURVES_LIST(23),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>STRING = 1;</code>
       */
      public static final int STRING_VALUE = 1;
      /**
       * <code>DOUBLE = 2;</code>
       */
      public static final int DOUBLE_VALUE = 2;
      /**
       * <code>INT32 = 3;</code>
       */
      public static final int INT32_VALUE = 3;
      /**
       * <code>INT64 = 5;</code>
       */
      public static final int INT64_VALUE = 5;
      /**
       * <code>BOOL = 6;</code>
       */
      public static final int BOOL_VALUE = 6;
      /**
       * <code>BYTES = 7;</code>
       */
      public static final int BYTES_VALUE = 7;
      /**
       * <code>ENUM = 8;</code>
       */
      public static final int ENUM_VALUE = 8;
      /**
       * <code>MESSAGE = 9;</code>
       */
      public static final int MESSAGE_VALUE = 9;
      /**
       * <code>DOUBLE_LIST = 10;</code>
       */
      public static final int DOUBLE_LIST_VALUE = 10;
      /**
       * <code>STRING_LIST = 11;</code>
       */
      public static final int STRING_LIST_VALUE = 11;
      /**
       * <code>FLOAT_LIST = 12;</code>
       */
      public static final int FLOAT_LIST_VALUE = 12;
      /**
       * <code>INTEGER_LIST = 13;</code>
       */
      public static final int INTEGER_LIST_VALUE = 13;
      /**
       * <code>LONG_LIST = 14;</code>
       */
      public static final int LONG_LIST_VALUE = 14;
      /**
       * <code>BOOLEAN_LIST = 15;</code>
       */
      public static final int BOOLEAN_LIST_VALUE = 15;
      /**
       * <code>BYTES_LIST = 16;</code>
       */
      public static final int BYTES_LIST_VALUE = 16;
      /**
       * <code>OBJECT = 17;</code>
       */
      public static final int OBJECT_VALUE = 17;
      /**
       * <code>POSE2D = 18;</code>
       */
      public static final int POSE2D_VALUE = 18;
      /**
       * <code>POSE3D = 19;</code>
       */
      public static final int POSE3D_VALUE = 19;
      /**
       * <code>COORDINATES = 20;</code>
       */
      public static final int COORDINATES_VALUE = 20;
      /**
       * <code>BEZIER_CURVES = 21;</code>
       */
      public static final int BEZIER_CURVES_VALUE = 21;
      /**
       * <code>BEZIER_CURVE = 22;</code>
       */
      public static final int BEZIER_CURVE_VALUE = 22;
      /**
       * <code>BEZIER_CURVES_LIST = 23;</code>
       */
      public static final int BEZIER_CURVES_LIST_VALUE = 23;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return STRING;
          case 2: return DOUBLE;
          case 3: return INT32;
          case 5: return INT64;
          case 6: return BOOL;
          case 7: return BYTES;
          case 8: return ENUM;
          case 9: return MESSAGE;
          case 10: return DOUBLE_LIST;
          case 11: return STRING_LIST;
          case 12: return FLOAT_LIST;
          case 13: return INTEGER_LIST;
          case 14: return LONG_LIST;
          case 15: return BOOLEAN_LIST;
          case 16: return BYTES_LIST;
          case 17: return OBJECT;
          case 18: return POSE2D;
          case 19: return POSE3D;
          case 20: return COORDINATES;
          case 21: return BEZIER_CURVES;
          case 22: return BEZIER_CURVE;
          case 23: return BEZIER_CURVES_LIST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.Type)
    }

    /**
     * Protobuf enum {@code org.kobe.xbot.Utilities.Entities.XTableMessage.Command}
     */
    public enum Command
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_COMMAND = 0;</code>
       */
      UNKNOWN_COMMAND(0),
      /**
       * <code>PUT = 1;</code>
       */
      PUT(1),
      /**
       * <code>GET = 2;</code>
       */
      GET(2),
      /**
       * <code>DEBUG = 3;</code>
       */
      DEBUG(3),
      /**
       * <code>GET_TABLES = 4;</code>
       */
      GET_TABLES(4),
      /**
       * <code>RUN_SCRIPT = 5;</code>
       */
      RUN_SCRIPT(5),
      /**
       * <code>UPDATE_KEY = 6;</code>
       */
      UPDATE_KEY(6),
      /**
       * <code>DELETE = 7;</code>
       */
      DELETE(7),
      /**
       * <code>PUBLISH = 8;</code>
       */
      PUBLISH(8),
      /**
       * <code>SUBSCRIBE_DELETE = 9;</code>
       */
      SUBSCRIBE_DELETE(9),
      /**
       * <code>UNSUBSCRIBE_DELETE = 10;</code>
       */
      UNSUBSCRIBE_DELETE(10),
      /**
       * <code>UNSUBSCRIBE_UPDATE = 11;</code>
       */
      UNSUBSCRIBE_UPDATE(11),
      /**
       * <code>PING = 12;</code>
       */
      PING(12),
      /**
       * <code>GET_RAW_JSON = 13;</code>
       */
      GET_RAW_JSON(13),
      /**
       * <code>DELETE_EVENT = 14;</code>
       */
      DELETE_EVENT(14),
      /**
       * <code>UPDATE_EVENT = 15;</code>
       */
      UPDATE_EVENT(15),
      /**
       * <code>INFORMATION = 16;</code>
       */
      INFORMATION(16),
      /**
       * <code>REBOOT_SERVER = 17;</code>
       */
      REBOOT_SERVER(17),
      /**
       * <code>REGISTRY = 18;</code>
       */
      REGISTRY(18),
      /**
       * <code>BATCH = 19;</code>
       */
      BATCH(19),
      /**
       * <code>GET_PROTO_DATA = 20;</code>
       */
      GET_PROTO_DATA(20),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN_COMMAND = 0;</code>
       */
      public static final int UNKNOWN_COMMAND_VALUE = 0;
      /**
       * <code>PUT = 1;</code>
       */
      public static final int PUT_VALUE = 1;
      /**
       * <code>GET = 2;</code>
       */
      public static final int GET_VALUE = 2;
      /**
       * <code>DEBUG = 3;</code>
       */
      public static final int DEBUG_VALUE = 3;
      /**
       * <code>GET_TABLES = 4;</code>
       */
      public static final int GET_TABLES_VALUE = 4;
      /**
       * <code>RUN_SCRIPT = 5;</code>
       */
      public static final int RUN_SCRIPT_VALUE = 5;
      /**
       * <code>UPDATE_KEY = 6;</code>
       */
      public static final int UPDATE_KEY_VALUE = 6;
      /**
       * <code>DELETE = 7;</code>
       */
      public static final int DELETE_VALUE = 7;
      /**
       * <code>PUBLISH = 8;</code>
       */
      public static final int PUBLISH_VALUE = 8;
      /**
       * <code>SUBSCRIBE_DELETE = 9;</code>
       */
      public static final int SUBSCRIBE_DELETE_VALUE = 9;
      /**
       * <code>UNSUBSCRIBE_DELETE = 10;</code>
       */
      public static final int UNSUBSCRIBE_DELETE_VALUE = 10;
      /**
       * <code>UNSUBSCRIBE_UPDATE = 11;</code>
       */
      public static final int UNSUBSCRIBE_UPDATE_VALUE = 11;
      /**
       * <code>PING = 12;</code>
       */
      public static final int PING_VALUE = 12;
      /**
       * <code>GET_RAW_JSON = 13;</code>
       */
      public static final int GET_RAW_JSON_VALUE = 13;
      /**
       * <code>DELETE_EVENT = 14;</code>
       */
      public static final int DELETE_EVENT_VALUE = 14;
      /**
       * <code>UPDATE_EVENT = 15;</code>
       */
      public static final int UPDATE_EVENT_VALUE = 15;
      /**
       * <code>INFORMATION = 16;</code>
       */
      public static final int INFORMATION_VALUE = 16;
      /**
       * <code>REBOOT_SERVER = 17;</code>
       */
      public static final int REBOOT_SERVER_VALUE = 17;
      /**
       * <code>REGISTRY = 18;</code>
       */
      public static final int REGISTRY_VALUE = 18;
      /**
       * <code>BATCH = 19;</code>
       */
      public static final int BATCH_VALUE = 19;
      /**
       * <code>GET_PROTO_DATA = 20;</code>
       */
      public static final int GET_PROTO_DATA_VALUE = 20;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Command valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Command forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN_COMMAND;
          case 1: return PUT;
          case 2: return GET;
          case 3: return DEBUG;
          case 4: return GET_TABLES;
          case 5: return RUN_SCRIPT;
          case 6: return UPDATE_KEY;
          case 7: return DELETE;
          case 8: return PUBLISH;
          case 9: return SUBSCRIBE_DELETE;
          case 10: return UNSUBSCRIBE_DELETE;
          case 11: return UNSUBSCRIBE_UPDATE;
          case 12: return PING;
          case 13: return GET_RAW_JSON;
          case 14: return DELETE_EVENT;
          case 15: return UPDATE_EVENT;
          case 16: return INFORMATION;
          case 17: return REBOOT_SERVER;
          case 18: return REGISTRY;
          case 19: return BATCH;
          case 20: return GET_PROTO_DATA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Command>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Command> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Command>() {
              public Command findValueByNumber(int number) {
                return Command.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDescriptor().getEnumTypes().get(1);
      }

      private static final Command[] VALUES = values();

      public static Command valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Command(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.Command)
    }

    public interface XTablesDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      int getDataCount();
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      boolean containsData(
          java.lang.String key);
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
      getData();
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
      getDataMap();
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrDefault(
          java.lang.String key,
          /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData defaultValue);
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrThrow(
          java.lang.String key);

      /**
       * <pre>
       * Byte array for storing values
       * </pre>
       *
       * <code>bytes value = 2;</code>
       * @return The value.
       */
      com.google.protobuf.ByteString getValue();

      /**
       * <pre>
       * Enum for type
       * </pre>
       *
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <pre>
       * Enum for type
       * </pre>
       *
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
       * @return The type.
       */
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType();
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData}
     */
    public static final class XTablesData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData)
        XTablesDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use XTablesData.newBuilder() to construct.
      private XTablesData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private XTablesData() {
        value_ = com.google.protobuf.ByteString.EMPTY;
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new XTablesData();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      @java.lang.Override
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder.class);
      }

      public static final int DATA_FIELD_NUMBER = 1;
      private static final class DataDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>newDefaultInstance(
                    org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.MESSAGE,
                    org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.getDefaultInstance());
      }
      @SuppressWarnings("serial")
      private com.google.protobuf.MapField<
          java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> data_;
      private com.google.protobuf.MapField<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
      internalGetData() {
        if (data_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DataDefaultEntryHolder.defaultEntry);
        }
        return data_;
      }
      public int getDataCount() {
        return internalGetData().getMap().size();
      }
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      @java.lang.Override
      public boolean containsData(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> getData() {
        return getDataMap();
      }
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> getDataMap() {
        return internalGetData().getMap();
      }
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrDefault(
          java.lang.String key,
          /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> map =
            internalGetData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Nested data map
       * </pre>
       *
       * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
       */
      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> map =
            internalGetData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int VALUE_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Byte array for storing values
       * </pre>
       *
       * <code>bytes value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }

      public static final int TYPE_FIELD_NUMBER = 3;
      private int type_ = 0;
      /**
       * <pre>
       * Enum for type
       * </pre>
       *
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Enum for type
       * </pre>
       *
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
       * @return The type.
       */
      @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetData(),
            DataDefaultEntryHolder.defaultEntry,
            1);
        if (!value_.isEmpty()) {
          output.writeBytes(2, value_);
        }
        if (type_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNKNOWN.getNumber()) {
          output.writeEnum(3, type_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (java.util.Map.Entry<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> entry
             : internalGetData().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
          data__ = DataDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, data__);
        }
        if (!value_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, value_);
        }
        if (type_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, type_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData)) {
          return super.equals(obj);
        }
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData other = (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) obj;

        if (!internalGetData().equals(
            other.internalGetData())) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (type_ != other.type_) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (!internalGetData().getMap().isEmpty()) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + internalGetData().hashCode();
        }
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData)
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
            int number) {
          switch (number) {
            case 1:
              return internalGetData();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
            int number) {
          switch (number) {
            case 1:
              return internalGetMutableData();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder.class);
        }

        // Construct using org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          internalGetMutableData().clear();
          value_ = com.google.protobuf.ByteString.EMPTY;
          type_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDefaultInstanceForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.getDefaultInstance();
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData build() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData buildPartial() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData result = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.data_ = internalGetData().build(DataDefaultEntryHolder.defaultEntry);
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.value_ = value_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.type_ = type_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) {
            return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData other) {
          if (other == org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.getDefaultInstance()) return this;
          internalGetMutableData().mergeFrom(
              other.internalGetData());
          bitField0_ |= 0x00000001;
          if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
            setValue(other.getValue());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.MapEntry<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
                  data__ = input.readMessage(
                      DataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                  internalGetMutableData().ensureBuilderMap().put(
                      data__.getKey(), data__.getValue());
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  value_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  type_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private static final class DataConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> {
          @java.lang.Override
          public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData build(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder val) {
            if (val instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) { return (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) val; }
            return ((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder) val).build();
          }

          @java.lang.Override
          public com.google.protobuf.MapEntry<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> defaultEntry() {
            return DataDefaultEntryHolder.defaultEntry;
          }
        };
        private static final DataConverter dataConverter = new DataConverter();

        private com.google.protobuf.MapFieldBuilder<
            java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder> data_;
        private com.google.protobuf.MapFieldBuilder<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder>
            internalGetData() {
          if (data_ == null) {
            return new com.google.protobuf.MapFieldBuilder<>(dataConverter);
          }
          return data_;
        }
        private com.google.protobuf.MapFieldBuilder<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder>
            internalGetMutableData() {
          if (data_ == null) {
            data_ = new com.google.protobuf.MapFieldBuilder<>(dataConverter);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return data_;
        }
        public int getDataCount() {
          return internalGetData().ensureBuilderMap().size();
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        @java.lang.Override
        public boolean containsData(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          return internalGetData().ensureBuilderMap().containsKey(key);
        }
        /**
         * Use {@link #getDataMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> getData() {
          return getDataMap();
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> getDataMap() {
          return internalGetData().getImmutableMap();
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        @java.lang.Override
        public /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrDefault(
            java.lang.String key,
            /* nullable */
org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData defaultValue) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder> map = internalGetMutableData().ensureBuilderMap();
          return map.containsKey(key) ? dataConverter.build(map.get(key)) : defaultValue;
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDataOrThrow(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder> map = internalGetMutableData().ensureBuilderMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return dataConverter.build(map.get(key));
        }
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000001);
          internalGetMutableData().clear();
          return this;
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        public Builder removeData(
            java.lang.String key) {
          if (key == null) { throw new NullPointerException("map key"); }
          internalGetMutableData().ensureBuilderMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData>
            getMutableData() {
          bitField0_ |= 0x00000001;
          return internalGetMutableData().ensureMessageMap();
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        public Builder putData(
            java.lang.String key,
            org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData value) {
          if (key == null) { throw new NullPointerException("map key"); }
          if (value == null) { throw new NullPointerException("map value"); }
          internalGetMutableData().ensureBuilderMap()
              .put(key, value);
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        public Builder putAllData(
            java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> values) {
          for (java.util.Map.Entry<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData> e : values.entrySet()) {
            if (e.getKey() == null || e.getValue() == null) {
              throw new NullPointerException();
            }
          }
          internalGetMutableData().ensureBuilderMap()
              .putAll(values);
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <pre>
         * Nested data map
         * </pre>
         *
         * <code>map&lt;string, .org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData&gt; data = 1;</code>
         */
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder putDataBuilderIfAbsent(
            java.lang.String key) {
          java.util.Map<java.lang.String, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder> builderMap = internalGetMutableData().ensureBuilderMap();
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesDataOrBuilder entry = builderMap.get(key);
          if (entry == null) {
            entry = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.newBuilder();
            builderMap.put(key, entry);
          }
          if (entry instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) {
            entry = ((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData) entry).toBuilder();
            builderMap.put(key, entry);
          }
          return (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData.Builder) entry;
        }

        private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * Byte array for storing values
         * </pre>
         *
         * <code>bytes value = 2;</code>
         * @return The value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValue() {
          return value_;
        }
        /**
         * <pre>
         * Byte array for storing values
         * </pre>
         *
         * <code>bytes value = 2;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          value_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Byte array for storing values
         * </pre>
         *
         * <code>bytes value = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Enum for type
         * </pre>
         *
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Enum for type
         * </pre>
         *
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Enum for type
         * </pre>
         *
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
         * @return The type.
         */
        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
          return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Enum for type
         * </pre>
         *
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Enum for type
         * </pre>
         *
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000004);
          type_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData)
      }

      // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTablesData)
      private static final org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData();
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<XTablesData>
          PARSER = new com.google.protobuf.AbstractParser<XTablesData>() {
        @java.lang.Override
        public XTablesData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<XTablesData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<XTablesData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTablesData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface XTableLogOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
       * @return The enum numeric value on the wire for level.
       */
      int getLevelValue();
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
       * @return The level.
       */
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level getLevel();

      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      java.lang.String getMessage();
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      com.google.protobuf.ByteString
          getMessageBytes();
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog}
     */
    public static final class XTableLog extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog)
        XTableLogOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use XTableLog.newBuilder() to construct.
      private XTableLog(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private XTableLog() {
        level_ = 0;
        message_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new XTableLog();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Builder.class);
      }

      /**
       * Protobuf enum {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level}
       */
      public enum Level
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>INFO = 1;</code>
         */
        INFO(1),
        /**
         * <code>WARNING = 2;</code>
         */
        WARNING(2),
        /**
         * <code>SEVERE = 3;</code>
         */
        SEVERE(3),
        /**
         * <code>FATAL = 4;</code>
         */
        FATAL(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>INFO = 1;</code>
         */
        public static final int INFO_VALUE = 1;
        /**
         * <code>WARNING = 2;</code>
         */
        public static final int WARNING_VALUE = 2;
        /**
         * <code>SEVERE = 3;</code>
         */
        public static final int SEVERE_VALUE = 3;
        /**
         * <code>FATAL = 4;</code>
         */
        public static final int FATAL_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Level valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Level forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return INFO;
            case 2: return WARNING;
            case 3: return SEVERE;
            case 4: return FATAL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Level>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Level> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Level>() {
                public Level findValueByNumber(int number) {
                  return Level.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.getDescriptor().getEnumTypes().get(0);
        }

        private static final Level[] VALUES = values();

        public static Level valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Level(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level)
      }

      public static final int LEVEL_FIELD_NUMBER = 1;
      private int level_ = 0;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
       * @return The enum numeric value on the wire for level.
       */
      @java.lang.Override public int getLevelValue() {
        return level_;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
       * @return The level.
       */
      @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level getLevel() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.forNumber(level_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.UNRECOGNIZED : result;
      }

      public static final int MESSAGE_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object message_ = "";
      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (level_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.UNKNOWN.getNumber()) {
          output.writeEnum(1, level_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (level_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, level_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(message_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog)) {
          return super.equals(obj);
        }
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog other = (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog) obj;

        if (level_ != other.level_) return false;
        if (!getMessage()
            .equals(other.getMessage())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + level_;
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog)
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLogOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Builder.class);
        }

        // Construct using org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          level_ = 0;
          message_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog getDefaultInstanceForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.getDefaultInstance();
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog build() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog buildPartial() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog result = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.level_ = level_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.message_ = message_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog) {
            return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog other) {
          if (other == org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.getDefaultInstance()) return this;
          if (other.level_ != 0) {
            setLevelValue(other.getLevelValue());
          }
          if (!other.getMessage().isEmpty()) {
            message_ = other.message_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  level_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  message_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int level_ = 0;
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
         * @return The enum numeric value on the wire for level.
         */
        @java.lang.Override public int getLevelValue() {
          return level_;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
         * @param value The enum numeric value on the wire for level to set.
         * @return This builder for chaining.
         */
        public Builder setLevelValue(int value) {
          level_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
         * @return The level.
         */
        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level getLevel() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.forNumber(level_);
          return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level.UNRECOGNIZED : result;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
         * @param value The level to set.
         * @return This builder for chaining.
         */
        public Builder setLevel(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog.Level value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          level_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog.Level level = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          level_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object message_ = "";
        /**
         * <code>string message = 2;</code>
         * @return The message.
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string message = 2;</code>
         * @return The bytes for message.
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string message = 2;</code>
         * @param value The message to set.
         * @return This builder for chaining.
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          message_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>string message = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMessage() {
          message_ = getDefaultInstance().getMessage();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>string message = 2;</code>
         * @param value The bytes for message to set.
         * @return This builder for chaining.
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          message_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog)
      }

      // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableLog)
      private static final org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog();
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<XTableLog>
          PARSER = new com.google.protobuf.AbstractParser<XTableLog>() {
        @java.lang.Override
        public XTableLog parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<XTableLog> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<XTableLog> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableLog getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface XTableUpdateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      java.lang.String getKey();
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
       * @return The enum numeric value on the wire for category.
       */
      int getCategoryValue();
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
       * @return The category.
       */
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category getCategory();

      /**
       * <code>bytes value = 3;</code>
       * @return The value.
       */
      com.google.protobuf.ByteString getValue();

      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The type.
       */
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType();

      /**
       * <code>optional uint64 timestamp = 5;</code>
       * @return Whether the timestamp field is set.
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint64 timestamp = 5;</code>
       * @return The timestamp.
       */
      long getTimestamp();
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate}
     */
    public static final class XTableUpdate extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate)
        XTableUpdateOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use XTableUpdate.newBuilder() to construct.
      private XTableUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private XTableUpdate() {
        key_ = "";
        category_ = 0;
        value_ = com.google.protobuf.ByteString.EMPTY;
        type_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new XTableUpdate();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Builder.class);
      }

      /**
       * Protobuf enum {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category}
       */
      public enum Category
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>UPDATE = 1;</code>
         */
        UPDATE(1),
        /**
         * <code>DELETE = 2;</code>
         */
        DELETE(2),
        /**
         * <code>PUBLISH = 3;</code>
         */
        PUBLISH(3),
        /**
         * <code>REGISTRY = 4;</code>
         */
        REGISTRY(4),
        /**
         * <code>INFORMATION = 5;</code>
         */
        INFORMATION(5),
        /**
         * <code>LOG = 6;</code>
         */
        LOG(6),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>UPDATE = 1;</code>
         */
        public static final int UPDATE_VALUE = 1;
        /**
         * <code>DELETE = 2;</code>
         */
        public static final int DELETE_VALUE = 2;
        /**
         * <code>PUBLISH = 3;</code>
         */
        public static final int PUBLISH_VALUE = 3;
        /**
         * <code>REGISTRY = 4;</code>
         */
        public static final int REGISTRY_VALUE = 4;
        /**
         * <code>INFORMATION = 5;</code>
         */
        public static final int INFORMATION_VALUE = 5;
        /**
         * <code>LOG = 6;</code>
         */
        public static final int LOG_VALUE = 6;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Category valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Category forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return UPDATE;
            case 2: return DELETE;
            case 3: return PUBLISH;
            case 4: return REGISTRY;
            case 5: return INFORMATION;
            case 6: return LOG;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Category>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Category> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Category>() {
                public Category findValueByNumber(int number) {
                  return Category.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.getDescriptor().getEnumTypes().get(0);
        }

        private static final Category[] VALUES = values();

        public static Category valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Category(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category)
      }

      private int bitField0_;
      public static final int KEY_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CATEGORY_FIELD_NUMBER = 2;
      private int category_ = 0;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
       * @return The enum numeric value on the wire for category.
       */
      @java.lang.Override public int getCategoryValue() {
        return category_;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
       * @return The category.
       */
      @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category getCategory() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.forNumber(category_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.UNRECOGNIZED : result;
      }

      public static final int VALUE_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }

      public static final int TYPE_FIELD_NUMBER = 4;
      private int type_ = 0;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The type.
       */
      @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 5;
      private long timestamp_ = 0L;
      /**
       * <code>optional uint64 timestamp = 5;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 timestamp = 5;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
        }
        if (category_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.UNKNOWN.getNumber()) {
          output.writeEnum(2, category_);
        }
        if (!value_.isEmpty()) {
          output.writeBytes(3, value_);
        }
        if (type_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNKNOWN.getNumber()) {
          output.writeEnum(4, type_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(5, timestamp_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
        }
        if (category_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, category_);
        }
        if (!value_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, value_);
        }
        if (type_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, type_);
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, timestamp_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate)) {
          return super.equals(obj);
        }
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate other = (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate) obj;

        if (!getKey()
            .equals(other.getKey())) return false;
        if (category_ != other.category_) return false;
        if (!getValue()
            .equals(other.getValue())) return false;
        if (type_ != other.type_) return false;
        if (hasTimestamp() != other.hasTimestamp()) return false;
        if (hasTimestamp()) {
          if (getTimestamp()
              != other.getTimestamp()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + category_;
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimestamp());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate)
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Builder.class);
        }

        // Construct using org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = "";
          category_ = 0;
          value_ = com.google.protobuf.ByteString.EMPTY;
          type_ = 0;
          timestamp_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate getDefaultInstanceForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.getDefaultInstance();
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate build() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate buildPartial() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate result = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = key_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.category_ = category_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.value_ = value_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.type_ = type_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.timestamp_ = timestamp_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate) {
            return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate other) {
          if (other == org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.getDefaultInstance()) return this;
          if (!other.getKey().isEmpty()) {
            key_ = other.key_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.category_ != 0) {
            setCategoryValue(other.getCategoryValue());
          }
          if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
            setValue(other.getValue());
          }
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  key_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  category_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  value_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 32: {
                  type_ = input.readEnum();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  timestamp_ = input.readUInt64();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object key_ = "";
        /**
         * <code>string key = 1;</code>
         * @return The key.
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string key = 1;</code>
         * @return The bytes for key.
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string key = 1;</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>string key = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          key_ = getDefaultInstance().getKey();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>string key = 1;</code>
         * @param value The bytes for key to set.
         * @return This builder for chaining.
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private int category_ = 0;
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
         * @return The enum numeric value on the wire for category.
         */
        @java.lang.Override public int getCategoryValue() {
          return category_;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
         * @param value The enum numeric value on the wire for category to set.
         * @return This builder for chaining.
         */
        public Builder setCategoryValue(int value) {
          category_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
         * @return The category.
         */
        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category getCategory() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.forNumber(category_);
          return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category.UNRECOGNIZED : result;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
         * @param value The category to set.
         * @return This builder for chaining.
         */
        public Builder setCategory(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate.Category value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          category_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate.Category category = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCategory() {
          bitField0_ = (bitField0_ & ~0x00000002);
          category_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>bytes value = 3;</code>
         * @return The value.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getValue() {
          return value_;
        }
        /**
         * <code>bytes value = 3;</code>
         * @param value The value to set.
         * @return This builder for chaining.
         */
        public Builder setValue(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          value_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>bytes value = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          type_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
         * @return The type.
         */
        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
          return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = 0;
          onChanged();
          return this;
        }

        private long timestamp_ ;
        /**
         * <code>optional uint64 timestamp = 5;</code>
         * @return Whether the timestamp field is set.
         */
        @java.lang.Override
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint64 timestamp = 5;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint64 timestamp = 5;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {

          timestamp_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 timestamp = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000010);
          timestamp_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate)
      }

      // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.XTableUpdate)
      private static final org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate();
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<XTableUpdate>
          PARSER = new com.google.protobuf.AbstractParser<XTableUpdate>() {
        @java.lang.Override
        public XTableUpdate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<XTableUpdate> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<XTableUpdate> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.XTableUpdate getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ClientInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string ip_address = 1;</code>
       * @return The ipAddress.
       */
      java.lang.String getIpAddress();
      /**
       * <code>string ip_address = 1;</code>
       * @return The bytes for ipAddress.
       */
      com.google.protobuf.ByteString
          getIpAddressBytes();

      /**
       * <code>string hostname = 2;</code>
       * @return The hostname.
       */
      java.lang.String getHostname();
      /**
       * <code>string hostname = 2;</code>
       * @return The bytes for hostname.
       */
      com.google.protobuf.ByteString
          getHostnameBytes();

      /**
       * <code>string operating_system = 3;</code>
       * @return The operatingSystem.
       */
      java.lang.String getOperatingSystem();
      /**
       * <code>string operating_system = 3;</code>
       * @return The bytes for operatingSystem.
       */
      com.google.protobuf.ByteString
          getOperatingSystemBytes();

      /**
       * <code>int32 port = 4;</code>
       * @return The port.
       */
      int getPort();

      /**
       * <code>bool is_active = 5;</code>
       * @return The isActive.
       */
      boolean getIsActive();

      /**
       * <code>string version = 6;</code>
       * @return The version.
       */
      java.lang.String getVersion();
      /**
       * <code>string version = 6;</code>
       * @return The bytes for version.
       */
      com.google.protobuf.ByteString
          getVersionBytes();

      /**
       * <code>string user_agent = 7;</code>
       * @return The userAgent.
       */
      java.lang.String getUserAgent();
      /**
       * <code>string user_agent = 7;</code>
       * @return The bytes for userAgent.
       */
      com.google.protobuf.ByteString
          getUserAgentBytes();
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo}
     */
    public static final class ClientInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo)
        ClientInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ClientInfo.newBuilder() to construct.
      private ClientInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ClientInfo() {
        ipAddress_ = "";
        hostname_ = "";
        operatingSystem_ = "";
        version_ = "";
        userAgent_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ClientInfo();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.Builder.class);
      }

      public static final int IP_ADDRESS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object ipAddress_ = "";
      /**
       * <code>string ip_address = 1;</code>
       * @return The ipAddress.
       */
      @java.lang.Override
      public java.lang.String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ipAddress_ = s;
          return s;
        }
      }
      /**
       * <code>string ip_address = 1;</code>
       * @return The bytes for ipAddress.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getIpAddressBytes() {
        java.lang.Object ref = ipAddress_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ipAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HOSTNAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object hostname_ = "";
      /**
       * <code>string hostname = 2;</code>
       * @return The hostname.
       */
      @java.lang.Override
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hostname_ = s;
          return s;
        }
      }
      /**
       * <code>string hostname = 2;</code>
       * @return The bytes for hostname.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int OPERATING_SYSTEM_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object operatingSystem_ = "";
      /**
       * <code>string operating_system = 3;</code>
       * @return The operatingSystem.
       */
      @java.lang.Override
      public java.lang.String getOperatingSystem() {
        java.lang.Object ref = operatingSystem_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operatingSystem_ = s;
          return s;
        }
      }
      /**
       * <code>string operating_system = 3;</code>
       * @return The bytes for operatingSystem.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOperatingSystemBytes() {
        java.lang.Object ref = operatingSystem_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatingSystem_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PORT_FIELD_NUMBER = 4;
      private int port_ = 0;
      /**
       * <code>int32 port = 4;</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }

      public static final int IS_ACTIVE_FIELD_NUMBER = 5;
      private boolean isActive_ = false;
      /**
       * <code>bool is_active = 5;</code>
       * @return The isActive.
       */
      @java.lang.Override
      public boolean getIsActive() {
        return isActive_;
      }

      public static final int VERSION_FIELD_NUMBER = 6;
      @SuppressWarnings("serial")
      private volatile java.lang.Object version_ = "";
      /**
       * <code>string version = 6;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        }
      }
      /**
       * <code>string version = 6;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int USER_AGENT_FIELD_NUMBER = 7;
      @SuppressWarnings("serial")
      private volatile java.lang.Object userAgent_ = "";
      /**
       * <code>string user_agent = 7;</code>
       * @return The userAgent.
       */
      @java.lang.Override
      public java.lang.String getUserAgent() {
        java.lang.Object ref = userAgent_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userAgent_ = s;
          return s;
        }
      }
      /**
       * <code>string user_agent = 7;</code>
       * @return The bytes for userAgent.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserAgentBytes() {
        java.lang.Object ref = userAgent_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userAgent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ipAddress_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hostname_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operatingSystem_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, operatingSystem_);
        }
        if (port_ != 0) {
          output.writeInt32(4, port_);
        }
        if (isActive_ != false) {
          output.writeBool(5, isActive_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, version_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userAgent_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, userAgent_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(ipAddress_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ipAddress_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(hostname_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hostname_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operatingSystem_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, operatingSystem_);
        }
        if (port_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, port_);
        }
        if (isActive_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, isActive_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, version_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(userAgent_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, userAgent_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo)) {
          return super.equals(obj);
        }
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo other = (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo) obj;

        if (!getIpAddress()
            .equals(other.getIpAddress())) return false;
        if (!getHostname()
            .equals(other.getHostname())) return false;
        if (!getOperatingSystem()
            .equals(other.getOperatingSystem())) return false;
        if (getPort()
            != other.getPort()) return false;
        if (getIsActive()
            != other.getIsActive()) return false;
        if (!getVersion()
            .equals(other.getVersion())) return false;
        if (!getUserAgent()
            .equals(other.getUserAgent())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddress().hashCode();
        hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
        hash = (53 * hash) + getHostname().hashCode();
        hash = (37 * hash) + OPERATING_SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getOperatingSystem().hashCode();
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
        hash = (37 * hash) + IS_ACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsActive());
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion().hashCode();
        hash = (37 * hash) + USER_AGENT_FIELD_NUMBER;
        hash = (53 * hash) + getUserAgent().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo)
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.Builder.class);
        }

        // Construct using org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          ipAddress_ = "";
          hostname_ = "";
          operatingSystem_ = "";
          port_ = 0;
          isActive_ = false;
          version_ = "";
          userAgent_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo getDefaultInstanceForType() {
          return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.getDefaultInstance();
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo build() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo buildPartial() {
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo result = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.ipAddress_ = ipAddress_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.hostname_ = hostname_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.operatingSystem_ = operatingSystem_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.port_ = port_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.isActive_ = isActive_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.version_ = version_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.userAgent_ = userAgent_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo) {
            return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo other) {
          if (other == org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo.getDefaultInstance()) return this;
          if (!other.getIpAddress().isEmpty()) {
            ipAddress_ = other.ipAddress_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.getHostname().isEmpty()) {
            hostname_ = other.hostname_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (!other.getOperatingSystem().isEmpty()) {
            operatingSystem_ = other.operatingSystem_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          if (other.getPort() != 0) {
            setPort(other.getPort());
          }
          if (other.getIsActive() != false) {
            setIsActive(other.getIsActive());
          }
          if (!other.getVersion().isEmpty()) {
            version_ = other.version_;
            bitField0_ |= 0x00000020;
            onChanged();
          }
          if (!other.getUserAgent().isEmpty()) {
            userAgent_ = other.userAgent_;
            bitField0_ |= 0x00000040;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  ipAddress_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  hostname_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  operatingSystem_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 32: {
                  port_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  isActive_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 50: {
                  version_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
                case 58: {
                  userAgent_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 58
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object ipAddress_ = "";
        /**
         * <code>string ip_address = 1;</code>
         * @return The ipAddress.
         */
        public java.lang.String getIpAddress() {
          java.lang.Object ref = ipAddress_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            ipAddress_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string ip_address = 1;</code>
         * @return The bytes for ipAddress.
         */
        public com.google.protobuf.ByteString
            getIpAddressBytes() {
          java.lang.Object ref = ipAddress_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ipAddress_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string ip_address = 1;</code>
         * @param value The ipAddress to set.
         * @return This builder for chaining.
         */
        public Builder setIpAddress(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ipAddress_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>string ip_address = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearIpAddress() {
          ipAddress_ = getDefaultInstance().getIpAddress();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>string ip_address = 1;</code>
         * @param value The bytes for ipAddress to set.
         * @return This builder for chaining.
         */
        public Builder setIpAddressBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          ipAddress_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.lang.Object hostname_ = "";
        /**
         * <code>string hostname = 2;</code>
         * @return The hostname.
         */
        public java.lang.String getHostname() {
          java.lang.Object ref = hostname_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            hostname_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string hostname = 2;</code>
         * @return The bytes for hostname.
         */
        public com.google.protobuf.ByteString
            getHostnameBytes() {
          java.lang.Object ref = hostname_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            hostname_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string hostname = 2;</code>
         * @param value The hostname to set.
         * @return This builder for chaining.
         */
        public Builder setHostname(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          hostname_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>string hostname = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHostname() {
          hostname_ = getDefaultInstance().getHostname();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>string hostname = 2;</code>
         * @param value The bytes for hostname to set.
         * @return This builder for chaining.
         */
        public Builder setHostnameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          hostname_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object operatingSystem_ = "";
        /**
         * <code>string operating_system = 3;</code>
         * @return The operatingSystem.
         */
        public java.lang.String getOperatingSystem() {
          java.lang.Object ref = operatingSystem_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            operatingSystem_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string operating_system = 3;</code>
         * @return The bytes for operatingSystem.
         */
        public com.google.protobuf.ByteString
            getOperatingSystemBytes() {
          java.lang.Object ref = operatingSystem_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            operatingSystem_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string operating_system = 3;</code>
         * @param value The operatingSystem to set.
         * @return This builder for chaining.
         */
        public Builder setOperatingSystem(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          operatingSystem_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>string operating_system = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearOperatingSystem() {
          operatingSystem_ = getDefaultInstance().getOperatingSystem();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>string operating_system = 3;</code>
         * @param value The bytes for operatingSystem to set.
         * @return This builder for chaining.
         */
        public Builder setOperatingSystemBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          operatingSystem_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        private int port_ ;
        /**
         * <code>int32 port = 4;</code>
         * @return The port.
         */
        @java.lang.Override
        public int getPort() {
          return port_;
        }
        /**
         * <code>int32 port = 4;</code>
         * @param value The port to set.
         * @return This builder for chaining.
         */
        public Builder setPort(int value) {

          port_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>int32 port = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPort() {
          bitField0_ = (bitField0_ & ~0x00000008);
          port_ = 0;
          onChanged();
          return this;
        }

        private boolean isActive_ ;
        /**
         * <code>bool is_active = 5;</code>
         * @return The isActive.
         */
        @java.lang.Override
        public boolean getIsActive() {
          return isActive_;
        }
        /**
         * <code>bool is_active = 5;</code>
         * @param value The isActive to set.
         * @return This builder for chaining.
         */
        public Builder setIsActive(boolean value) {

          isActive_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>bool is_active = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsActive() {
          bitField0_ = (bitField0_ & ~0x00000010);
          isActive_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object version_ = "";
        /**
         * <code>string version = 6;</code>
         * @return The version.
         */
        public java.lang.String getVersion() {
          java.lang.Object ref = version_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            version_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string version = 6;</code>
         * @return The bytes for version.
         */
        public com.google.protobuf.ByteString
            getVersionBytes() {
          java.lang.Object ref = version_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            version_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string version = 6;</code>
         * @param value The version to set.
         * @return This builder for chaining.
         */
        public Builder setVersion(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          version_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>string version = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearVersion() {
          version_ = getDefaultInstance().getVersion();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }
        /**
         * <code>string version = 6;</code>
         * @param value The bytes for version to set.
         * @return This builder for chaining.
         */
        public Builder setVersionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          version_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }

        private java.lang.Object userAgent_ = "";
        /**
         * <code>string user_agent = 7;</code>
         * @return The userAgent.
         */
        public java.lang.String getUserAgent() {
          java.lang.Object ref = userAgent_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            userAgent_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string user_agent = 7;</code>
         * @return The bytes for userAgent.
         */
        public com.google.protobuf.ByteString
            getUserAgentBytes() {
          java.lang.Object ref = userAgent_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            userAgent_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string user_agent = 7;</code>
         * @param value The userAgent to set.
         * @return This builder for chaining.
         */
        public Builder setUserAgent(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          userAgent_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>string user_agent = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearUserAgent() {
          userAgent_ = getDefaultInstance().getUserAgent();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }
        /**
         * <code>string user_agent = 7;</code>
         * @param value The bytes for userAgent to set.
         * @return This builder for chaining.
         */
        public Builder setUserAgentBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          userAgent_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo)
      }

      // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.XTableMessage.ClientInfo)
      private static final org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo();
      }

      public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ClientInfo>
          PARSER = new com.google.protobuf.AbstractParser<ClientInfo>() {
        @java.lang.Override
        public ClientInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ClientInfo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ClientInfo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.ClientInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int COMMAND_FIELD_NUMBER = 1;
    private int command_ = 0;
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
     * @return The enum numeric value on the wire for command.
     */
    @java.lang.Override public int getCommandValue() {
      return command_;
    }
    /**
     * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
     * @return The command.
     */
    @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command getCommand() {
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.forNumber(command_);
      return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.UNRECOGNIZED : result;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object key_ = "";
    /**
     * <code>optional string key = 2;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string key = 2;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>optional string key = 2;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes value = 3;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bytes value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_ = 0;
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
     * @return The type.
     */
    @java.lang.Override public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
      return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
    }

    public static final int ID_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes id = 5;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes id = 5;</code>
     * @return The id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    public static final int BATCH_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> batch_;
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> getBatchList() {
      return batch_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder> 
        getBatchOrBuilderList() {
      return batch_;
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    @java.lang.Override
    public int getBatchCount() {
      return batch_.size();
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getBatch(int index) {
      return batch_.get(index);
    }
    /**
     * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
     */
    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder getBatchOrBuilder(
        int index) {
      return batch_.get(index);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 7;
    private long timestamp_ = 0L;
    /**
     * <code>optional uint64 timestamp = 7;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint64 timestamp = 7;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (command_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.UNKNOWN_COMMAND.getNumber()) {
        output.writeEnum(1, command_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(3, value_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(4, type_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(5, id_);
      }
      for (int i = 0; i < batch_.size(); i++) {
        output.writeMessage(6, batch_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(7, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (command_ != org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.UNKNOWN_COMMAND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, command_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, value_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, id_);
      }
      for (int i = 0; i < batch_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, batch_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage)) {
        return super.equals(obj);
      }
      org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage other = (org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage) obj;

      if (command_ != other.command_) return false;
      if (hasKey() != other.hasKey()) return false;
      if (hasKey()) {
        if (!getKey()
            .equals(other.getKey())) return false;
      }
      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!getBatchList()
          .equals(other.getBatchList())) return false;
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (getTimestamp()
            != other.getTimestamp()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (getBatchCount() > 0) {
        hash = (37 * hash) + BATCH_FIELD_NUMBER;
        hash = (53 * hash) + getBatchList().hashCode();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.kobe.xbot.Utilities.Entities.XTableMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.kobe.xbot.Utilities.Entities.XTableMessage)
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.class, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder.class);
      }

      // Construct using org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        command_ = 0;
        key_ = "";
        value_ = com.google.protobuf.ByteString.EMPTY;
        type_ = 0;
        id_ = com.google.protobuf.ByteString.EMPTY;
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
        } else {
          batch_ = null;
          batchBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        timestamp_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getDefaultInstanceForType() {
        return org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDefaultInstance();
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage build() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage buildPartial() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage result = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage result) {
        if (batchBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            batch_ = java.util.Collections.unmodifiableList(batch_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.batch_ = batch_;
        } else {
          result.batch_ = batchBuilder_.build();
        }
      }

      private void buildPartial0(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.command_ = command_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.key_ = key_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage) {
          return mergeFrom((org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage other) {
        if (other == org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDefaultInstance()) return this;
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        if (other.hasKey()) {
          key_ = other.key_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (batchBuilder_ == null) {
          if (!other.batch_.isEmpty()) {
            if (batch_.isEmpty()) {
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureBatchIsMutable();
              batch_.addAll(other.batch_);
            }
            onChanged();
          }
        } else {
          if (!other.batch_.isEmpty()) {
            if (batchBuilder_.isEmpty()) {
              batchBuilder_.dispose();
              batchBuilder_ = null;
              batch_ = other.batch_;
              bitField0_ = (bitField0_ & ~0x00000020);
              batchBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatchFieldBuilder() : null;
            } else {
              batchBuilder_.addAllMessages(other.batch_);
            }
          }
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                command_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                key_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                value_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                id_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage m =
                    input.readMessage(
                        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.parser(),
                        extensionRegistry);
                if (batchBuilder_ == null) {
                  ensureBatchIsMutable();
                  batch_.add(m);
                } else {
                  batchBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 56: {
                timestamp_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int command_ = 0;
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
       * @return The enum numeric value on the wire for command.
       */
      @java.lang.Override public int getCommandValue() {
        return command_;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
       * @param value The enum numeric value on the wire for command to set.
       * @return This builder for chaining.
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
       * @return The command.
       */
      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command getCommand() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.forNumber(command_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Command value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.kobe.xbot.Utilities.Entities.XTableMessage.Command command = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        bitField0_ = (bitField0_ & ~0x00000001);
        command_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>optional string key = 2;</code>
       * @return Whether the key field is set.
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string key = 2;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string key = 2;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        key_ = getDefaultInstance().getKey();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string key = 2;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        key_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes value = 3;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bytes value = 3;</code>
       * @return The value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>optional bytes value = 3;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        value_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type getType() {
        org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type result = org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.forNumber(type_);
        return result == null ? org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.kobe.xbot.Utilities.Entities.XTableMessage.Type type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes id = 5;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bytes id = 5;</code>
       * @return The id.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>optional bytes id = 5;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      private java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> batch_ =
        java.util.Collections.emptyList();
      private void ensureBatchIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          batch_ = new java.util.ArrayList<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage>(batch_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder> batchBuilder_;

      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> getBatchList() {
        if (batchBuilder_ == null) {
          return java.util.Collections.unmodifiableList(batch_);
        } else {
          return batchBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public int getBatchCount() {
        if (batchBuilder_ == null) {
          return batch_.size();
        } else {
          return batchBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getBatch(int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);
        } else {
          return batchBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder setBatch(
          int index, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.set(index, value);
          onChanged();
        } else {
          batchBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder setBatch(
          int index, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.set(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder addBatch(org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(value);
          onChanged();
        } else {
          batchBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder addBatch(
          int index, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage value) {
        if (batchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatchIsMutable();
          batch_.add(index, value);
          onChanged();
        } else {
          batchBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder addBatch(
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder addBatch(
          int index, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder builderForValue) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.add(index, builderForValue.build());
          onChanged();
        } else {
          batchBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder addAllBatch(
          java.lang.Iterable<? extends org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage> values) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, batch_);
          onChanged();
        } else {
          batchBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder clearBatch() {
        if (batchBuilder_ == null) {
          batch_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          batchBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public Builder removeBatch(int index) {
        if (batchBuilder_ == null) {
          ensureBatchIsMutable();
          batch_.remove(index);
          onChanged();
        } else {
          batchBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder getBatchBuilder(
          int index) {
        return getBatchFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder getBatchOrBuilder(
          int index) {
        if (batchBuilder_ == null) {
          return batch_.get(index);  } else {
          return batchBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public java.util.List<? extends org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder> 
           getBatchOrBuilderList() {
        if (batchBuilder_ != null) {
          return batchBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(batch_);
        }
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder addBatchBuilder() {
        return getBatchFieldBuilder().addBuilder(
            org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder addBatchBuilder(
          int index) {
        return getBatchFieldBuilder().addBuilder(
            index, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .org.kobe.xbot.Utilities.Entities.XTableMessage batch = 6;</code>
       */
      public java.util.List<org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder> 
           getBatchBuilderList() {
        return getBatchFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder> 
          getBatchFieldBuilder() {
        if (batchBuilder_ == null) {
          batchBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage.Builder, org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessageOrBuilder>(
                  batch_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          batch_ = null;
        }
        return batchBuilder_;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 7;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint64 timestamp = 7;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 7;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {

        timestamp_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.kobe.xbot.Utilities.Entities.XTableMessage)
    }

    // @@protoc_insertion_point(class_scope:org.kobe.xbot.Utilities.Entities.XTableMessage)
    private static final org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage();
    }

    public static org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<XTableMessage>
        PARSER = new com.google.protobuf.AbstractParser<XTableMessage>() {
      @java.lang.Override
      public XTableMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<XTableMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<XTableMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.kobe.xbot.Utilities.Entities.XTableProto.XTableMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n src/main/proto/XTableProto.proto\022 org." +
      "kobe.xbot.Utilities.Entities\"\326\017\n\rXTableM" +
      "essage\022H\n\007command\030\001 \001(\01627.org.kobe.xbot." +
      "Utilities.Entities.XTableMessage.Command" +
      "\022\020\n\003key\030\002 \001(\tH\000\210\001\001\022\022\n\005value\030\003 \001(\014H\001\210\001\001\022G" +
      "\n\004type\030\004 \001(\01624.org.kobe.xbot.Utilities.E" +
      "ntities.XTableMessage.TypeH\002\210\001\001\022\017\n\002id\030\005 " +
      "\001(\014H\003\210\001\001\022>\n\005batch\030\006 \003(\0132/.org.kobe.xbot." +
      "Utilities.Entities.XTableMessage\022\026\n\ttime" +
      "stamp\030\007 \001(\004H\004\210\001\001\032\237\002\n\013XTablesData\022S\n\004data" +
      "\030\001 \003(\0132E.org.kobe.xbot.Utilities.Entitie" +
      "s.XTableMessage.XTablesData.DataEntry\022\r\n" +
      "\005value\030\002 \001(\014\022B\n\004type\030\003 \001(\01624.org.kobe.xb" +
      "ot.Utilities.Entities.XTableMessage.Type" +
      "\032h\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022J\n\005value\030\002 \001(" +
      "\0132;.org.kobe.xbot.Utilities.Entities.XTa" +
      "bleMessage.XTablesData:\0028\001\032\260\001\n\tXTableLog" +
      "\022N\n\005level\030\001 \001(\0162?.org.kobe.xbot.Utilitie" +
      "s.Entities.XTableMessage.XTableLog.Level" +
      "\022\017\n\007message\030\002 \001(\t\"B\n\005Level\022\013\n\007UNKNOWN\020\000\022" +
      "\010\n\004INFO\020\001\022\013\n\007WARNING\020\002\022\n\n\006SEVERE\020\003\022\t\n\005FA" +
      "TAL\020\004\032\323\002\n\014XTableUpdate\022\013\n\003key\030\001 \001(\t\022W\n\010c" +
      "ategory\030\002 \001(\0162E.org.kobe.xbot.Utilities." +
      "Entities.XTableMessage.XTableUpdate.Cate" +
      "gory\022\r\n\005value\030\003 \001(\014\022B\n\004type\030\004 \001(\01624.org." +
      "kobe.xbot.Utilities.Entities.XTableMessa" +
      "ge.Type\022\026\n\ttimestamp\030\005 \001(\004H\000\210\001\001\"d\n\010Categ" +
      "ory\022\013\n\007UNKNOWN\020\000\022\n\n\006UPDATE\020\001\022\n\n\006DELETE\020\002" +
      "\022\013\n\007PUBLISH\020\003\022\014\n\010REGISTRY\020\004\022\017\n\013INFORMATI" +
      "ON\020\005\022\007\n\003LOG\020\006B\014\n\n_timestamp\032\222\001\n\nClientIn" +
      "fo\022\022\n\nip_address\030\001 \001(\t\022\020\n\010hostname\030\002 \001(\t" +
      "\022\030\n\020operating_system\030\003 \001(\t\022\014\n\004port\030\004 \001(\005" +
      "\022\021\n\tis_active\030\005 \001(\010\022\017\n\007version\030\006 \001(\t\022\022\n\n" +
      "user_agent\030\007 \001(\t\"\324\002\n\004Type\022\013\n\007UNKNOWN\020\000\022\n" +
      "\n\006STRING\020\001\022\n\n\006DOUBLE\020\002\022\t\n\005INT32\020\003\022\t\n\005INT" +
      "64\020\005\022\010\n\004BOOL\020\006\022\t\n\005BYTES\020\007\022\010\n\004ENUM\020\010\022\013\n\007M" +
      "ESSAGE\020\t\022\017\n\013DOUBLE_LIST\020\n\022\017\n\013STRING_LIST" +
      "\020\013\022\016\n\nFLOAT_LIST\020\014\022\020\n\014INTEGER_LIST\020\r\022\r\n\t" +
      "LONG_LIST\020\016\022\020\n\014BOOLEAN_LIST\020\017\022\016\n\nBYTES_L" +
      "IST\020\020\022\n\n\006OBJECT\020\021\022\n\n\006POSE2D\020\022\022\n\n\006POSE3D\020" +
      "\023\022\017\n\013COORDINATES\020\024\022\021\n\rBEZIER_CURVES\020\025\022\020\n" +
      "\014BEZIER_CURVE\020\026\022\026\n\022BEZIER_CURVES_LIST\020\027\"" +
      "\333\002\n\007Command\022\023\n\017UNKNOWN_COMMAND\020\000\022\007\n\003PUT\020" +
      "\001\022\007\n\003GET\020\002\022\t\n\005DEBUG\020\003\022\016\n\nGET_TABLES\020\004\022\016\n" +
      "\nRUN_SCRIPT\020\005\022\016\n\nUPDATE_KEY\020\006\022\n\n\006DELETE\020" +
      "\007\022\013\n\007PUBLISH\020\010\022\024\n\020SUBSCRIBE_DELETE\020\t\022\026\n\022" +
      "UNSUBSCRIBE_DELETE\020\n\022\026\n\022UNSUBSCRIBE_UPDA" +
      "TE\020\013\022\010\n\004PING\020\014\022\020\n\014GET_RAW_JSON\020\r\022\020\n\014DELE" +
      "TE_EVENT\020\016\022\020\n\014UPDATE_EVENT\020\017\022\017\n\013INFORMAT" +
      "ION\020\020\022\021\n\rREBOOT_SERVER\020\021\022\014\n\010REGISTRY\020\022\022\t" +
      "\n\005BATCH\020\023\022\022\n\016GET_PROTO_DATA\020\024B\006\n\004_keyB\010\n" +
      "\006_valueB\007\n\005_typeB\005\n\003_idB\014\n\n_timestampb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor,
        new java.lang.String[] { "Command", "Key", "Value", "Type", "Id", "Batch", "Timestamp", });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor =
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor.getNestedTypes().get(0);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor,
        new java.lang.String[] { "Data", "Value", "Type", });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_descriptor =
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_descriptor.getNestedTypes().get(0);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTablesData_DataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor =
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor.getNestedTypes().get(1);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableLog_descriptor,
        new java.lang.String[] { "Level", "Message", });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor =
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor.getNestedTypes().get(2);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_XTableUpdate_descriptor,
        new java.lang.String[] { "Key", "Category", "Value", "Type", "Timestamp", });
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor =
      internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_descriptor.getNestedTypes().get(3);
    internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_kobe_xbot_Utilities_Entities_XTableMessage_ClientInfo_descriptor,
        new java.lang.String[] { "IpAddress", "Hostname", "OperatingSystem", "Port", "IsActive", "Version", "UserAgent", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
