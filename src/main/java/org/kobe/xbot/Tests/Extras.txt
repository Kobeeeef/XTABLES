case "REGISTER_VIDEO_STREAM" -> {
                            if (tokens.length == 2) {
                                String name = tokens[1].trim();
                                if (Utilities.validateName(name, false)) {
                                    if (clients.stream().anyMatch(clientHandler -> clientHandler.streams != null && clientHandler.streams.contains(name))) {
                                        if (shouldReply) {
                                            ResponseInfo responseInfo = new ResponseInfo(id, methodType, ImageStreamStatus.FAIL_NAME_ALREADY_EXISTS.name());
                                            out.println(responseInfo.parsed());
                                            out.flush();
                                        }
                                    } else {
                                        if (streams == null) {
                                            streams = Collections.synchronizedList(new ArrayList<>());
                                        }
                                        streams.add(name);
                                        if (shouldReply) {
                                            ResponseInfo responseInfo = new ResponseInfo(id, methodType, ImageStreamStatus.OKAY.name());
                                            out.println(responseInfo.parsed());
                                            out.flush();
                                        }
                                    }
                                } else if (shouldReply) {
                                    ResponseInfo responseInfo = new ResponseInfo(id, methodType, ImageStreamStatus.FAIL_INVALID_NAME.name());
                                    out.println(responseInfo.parsed());
                                    out.flush();
                                }
                            }
                        }
                        case "GET_VIDEO_STREAM" -> {
                            if (tokens.length == 2) {
                                String name = tokens[1];
                                if (Utilities.validateName(name, false)) {
                                    Optional<ClientHandler> optional = clients.stream()
                                            .filter(clientHandler -> clientHandler.streams != null && clientHandler.streams.contains(name))
                                            .findFirst();

                                    ResponseInfo responseInfo = optional
                                            .map(clientHandler -> {
                                                String clientAddress = clientHandler.clientSocket.getInetAddress().getHostAddress();
                                                return new ResponseInfo(id, methodType, gson.toJson(String.format(
                                                        "http://%1$s:4888/%2$s",
                                                        clientAddress.equals("127.0.0.1") || clientAddress.equals("::1")
                                                                ? Utilities.getLocalIPAddress()
                                                                : clientAddress.replaceFirst("/", ""),
                                                        name)));
                                            })
                                            .orElseGet(() -> new ResponseInfo(id, methodType, ImageStreamStatus.FAIL_INVALID_NAME.name()));

                                    out.println(responseInfo.parsed());
                                    out.flush();
                                } else {
                                    ResponseInfo responseInfo = new ResponseInfo(id, methodType, ImageStreamStatus.FAIL_INVALID_NAME.name());
                                    out.println(responseInfo.parsed());
                                    out.flush();
                                }
                            }
                        }